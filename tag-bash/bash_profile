# Basics {{{

# Load .bashrc if it exists
test -f ~/.bashrc && source ~/.bashrc

# Add tab completion for SSH hostnames based on ~/.ssh/config, ignoring
# wildcards.
[ -e "$HOME/.ssh/config" ] && complete -o "default" -o "nospace" -W "$(grep "^Host" ~/.ssh/config | grep -v "[?*]" | cut -d " " -f2)" scp sftp ssh

# Add tab completion for `defaults read|write NSGlobalDomain`.
# You could just use `-g` instead, but I like being explicit.
complete -W "NSGlobalDomain" defaults

# }}}
# Environment Variables {{{

# Set architecture flags
export ARCHFLAGS="-arch x86_64"

# Prefer US English and use UTF-8
export LC_ALL="en_US.UTF-8"
export LANG="en_US"

# Required for gpg... sometimes... gpg is fickle and frustrating.
export GPG_TTY=$(tty)

# Config file for ripgrep.
# See: https://github.com/BurntSushi/ripgrep/blob/master/GUIDE.md#configuration-file
export RIPGREP_CONFIG_PATH="$HOME/.ripgreprc"
# For Bat.  See: https://github.com/sharkdp/bat
export BAT_THEME="TwoDark"
# For golang
export GOPATH="$HOME/go"
# For anything that needs to use the homebrew install of zlib or openssl.
# See: https://github.com/pyenv/pyenv/wiki/Common-build-problems#build-failed-error-the-python-zlib-extension-was-not-compiled-missing-the-zlib
export CPPFLAGS="-L(brew --prefix zlib)/include -L(brew --prefix openssl)/include"
export LDFLAGS="-L(brew --prefix zlib)/lib -L(brew --prefix openssl)/lib"

# Don’t clear the screen after quitting a manual page
export MANPAGER="less -X"
export EDITOR="nvim"
export DEVELOPER="$HOME/Developer"

export BREW_PREFIX=$(brew --prefix)

# fzf {{{

# Use git to search files when in a git repo, otherwise use fd.
export FZF_DEFAULT_COMMAND='git ls-tree -r --name-only HEAD | fd --type file --hidden --follow'
# If a command is really long press `?` to see the full command in a preview
# window.  And press <C-y> to copy a command to the clipboard rather than run it.
export FZF_CTRL_R_OPTS="--preview 'echo {}' --preview-window down:3:hidden:wrap --bind '?:toggle-preview' --bind 'ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort' --header 'Press CTRL-Y to copy command into clipboard' --border"
# Attempt to preview with bat or highlight or coderay or rougify before finally
# using cat.  Only preview 100 lines.
export FZF_CTRL_T_OPTS="--preview 'bat --style=numbers --color=always {} || highlight -O ansi -l {} || coderay {} || rougify {} || cat {} 2> /dev/null | head -100'"
# Use the default command for <C-t>.
export FZF_CTRL_T_COMMAND=$FZF_DEFAULT_COMMAND
# Preview directories using tree.  Only preview 100 lines.
export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -100'"

# }}}

# }}}
# Path {{{

export PATH=$PATH:$BREW_PREFIX/bin:$BREW_PREFIX/sbin:/usr/bin:/bin:/usr/sbin:/sbin
export PATH=$PATH:$HOME/go/bin
export PATH=$PATH:$HOME/.config/scripts
export PATH=$PATH:/Library/TeX/texbin

# }}}
# Files I need to source {{{

if [ -f $(brew --prefix)/etc/bash_completion ]; then
  . $(brew --prefix)/etc/bash_completion
fi

if [ -f $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash ]; then
  . $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash
fi

# }}}
# Aliases {{{

# List all files colorized in long format, including dot files
alias ll="ls -la ${colorflag}"

# IP addresses
# http://brettterpstra.com/2013/03/31/a-few-more-of-my-favorite-shell-aliases/
alias ip="curl icanhazip.com"
alias localip="ipconfig getifaddr en1"
alias ips="ifconfig -a | perl -nle'/(\d+\.\d+\.\d+\.\d+)/ && print $1'"

# Enhanced WHOIS lookups
alias whois="whois -h whois-servers.net"

# View HTTP traffic
alias sniff="sudo ngrep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
alias httpdump="sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"Host\: .*|GET \/.*\""

# Empty the Trash on all mounted volumes and the main HDD
alias emptytrash="sudo rm -rfv /Volumes/*/.Trashes; rm -rfv ~/.Trash"

# http://brettterpstra.com/2013/03/31/a-few-more-of-my-favorite-shell-aliases/
# make executable
alias ax="chmod a+x"

# Quick edits
# edit .bash_profile
alias eb="$EDITOR ~/.bash_profile"
# edit config.fish
alias ef="$EDITOR ~/.config/fish/config.fish"
# edit .gitconfig
alias eg="$EDITOR ~/.gitconfig"
# edit .muttrc
alias em="$EDITOR ~/.muttrc"
# edit .tmux.conf
alias et="$EDITOR ~/.tmux.conf"
# edit .vimrc
alias ev="$EDITOR ~/.vimrc"
# edit keybindings.dict
alias kb="$EDITOR ~/Library/KeyBindings/DefaultKeyBinding.dict"

# reload your bash config
alias src="source ~/.bash_profile"

# Open path in Finder
# http://brettterpstra.com/2013/02/09/quick-tip-jumping-to-the-finder-location-in-terminal/
alias f='open -a Finder ./'

# Eject drive from command line
alias eject="diskutil unmount"

# Stuff I never really use but cannot delete either because of http://xkcd.com/530/
alias stfu="osascript -e 'set volume output muted true'"
alias pumpitup="osascript -e 'set volume 10'"
alias hax="growlnotify -a 'Activity Monitor' 'System error' -m 'WTF R U DOIN'"

# }}}
# Bash Prompt {{{

# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
  export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
  export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
  tput sgr0
  if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
    MAGENTA=$(tput setaf 9)
    ORANGE=$(tput setaf 172)
    GREEN=$(tput setaf 190)
    PURPLE=$(tput setaf 141)
    WHITE=$(tput setaf 256)
  else
    MAGENTA=$(tput setaf 5)
    ORANGE=$(tput setaf 4)
    GREEN=$(tput setaf 2)
    PURPLE=$(tput setaf 1)
    WHITE=$(tput setaf 7)
  fi
  BOLD=$(tput bold)
  RESET=$(tput sgr0)
else
  MAGENTA="\033[1;31m"
  ORANGE="\033[1;33m"
  GREEN="\033[1;32m"
  PURPLE="\033[1;35m"
  WHITE="\033[1;37m"
  BOLD=""
  RESET="\033[m"
fi

function parse_git_dirty() {
  [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "*"
}

function parse_git_branch() {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

PS1="\n\[$RESET\]┌─▪\[\e]2;$PWD\[\a\]\[\e]1;\]$(basename "$(dirname "$PWD")")/\W\[\a\]\[${BOLD}${MAGENTA}\]\u \[$WHITE\]on \[$ORANGE\]\h \[$WHITE\]in \[$GREEN\]\w\[$WHITE\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$PURPLE\]\$(parse_git_branch)\[$RESET\]\n└─▪ "

# }}}
# Stuff for tools, etc... {{{

# For autojump
[[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh

[[ -s $(brew --prefix asdf)/asdf.sh ]] && . $(brew --prefix asdf)/asdf.sh

# }}}
# vim: set foldmethod=marker foldmarker={{{,}}} syntax=sh:
