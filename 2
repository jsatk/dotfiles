# .plan

My personal `.plan` file.  The intent of this is to contain a daily log of what I *actually plan* on accomplishing, what I *did* accomplish, and notes for my future self (or other readers) to reference.  This is both a personal and professional `.plan` file.  I've been doing this for years and it's been very helpful for me.  I hope you find it interesting and/or useful.

Inspiration:

* http://www.catb.org/jargon/html/P/plan-file.html
* https://dev.to/solidi/rediscovering-the-plan-file-4k1i
* https://github.com/ESWAT/john-carmack-plan-archive/

**Table of Contents**

* [2023](#2023)
    * [January 2023](#january-2023)
        * [01-03-2023](#01-03-2023)
        * [01-04-2023](#01-04-2023)
        * [01-05-2023](#01-05-2023)
        * [01-06-2023](#01-06-2023)
        * [01-09-2023](#01-09-2023)
        * [01-10-2023](#01-10-2023)
        * [01-11-2023](#01-11-2023)
        * [01-12-2023](#01-12-2023)
        * [01-13-2023](#01-13-2023)
        * [01-17-2023](#01-17-2023)
        * [01-18-2023](#01-18-2023)
        * [01-23-2023](#01-23-2023)
        * [01-24-2023](#01-24-2023)
        * [01-25-2023](#01-25-2023)
        * [01-26-2023](#01-26-2023)
        * [01-30-2023](#01-30-2023)
    * [February 2023](#february-2023)
        * [02-02-2023](#02-02-2023)
        * [02-06-2023](#02-06-2023)
        * [02-07-2023](#02-07-2023)
        * [02-13-2023](#02-13-2023)
        * [02-14-2023](#02-14-2023)
        * [02-15-2023](#02-15-2023)
        * [02-16-2023](#02-16-2023)
        * [02-16-2023](#02-16-2023)
        * [02-17-2023](#02-17-2023)
        * [02-21-2023](#02-21-2023)
        * [02-22-2023](#02-22-2023)
        * [02-23-2023](#02-23-2023)
        * [02-28-2023](#02-28-2023)
    * [March 2023](#march-2023)
        * [03-01-2023](#03-01-2023)
        * [03-02-2023](#03-02-2023)
        * [03-03-2023](#03-03-2023)
        * [03-06-2023](#03-06-2023)
        * [03-07-2023](#03-07-2023)
        * [03-08-2023](#03-08-2023)
        * [03-09-2023](#03-09-2023)
        * [03-10-2023](#03-10-2023)
        * [03-13-2023](#03-13-2023)
        * [03-21-2023](#03-21-2023)
        * [03-22-2023](#03-22-2023)
        * [03-23-2023](#03-23-2023)
        * [03-24-2023](#03-24-2023)
        * [03-27-2023](#03-27-2023)
        * [03-28-2023](#03-28-2023)
        * [03-29-2023](#03-29-2023)
    * [April 2023](#april-2023)
        * [04-06-2023](#04-06-2023)
        * [04-18-2023](#04-18-2023)
        * [04-19-2023](#04-19-2023)
        * [04-20-2023](#04-20-2023)
        * [04-21-2023](#04-21-2023)
        * [04-24-2023](#04-24-2023)
        * [04-25-2023](#04-25-2023)
        * [04-26-2023](#04-26-2023)
        * [04-27-2023](#04-27-2023)
    * [May 2023](#may-2023)
        * [05-02-2023](#05-02-2023)
        * [05-03-2023](#05-03-2023)
        * [05-04-2023](#05-04-2023)
        * [05-08-2023](#05-08-2023)
        * [05-09-2023](#05-09-2023)
        * [05-10-2023](#05-10-2023)
        * [05-15-2023](#05-15-2023)
        * [05-16-2023](#05-16-2023)
        * [05-17-2023](#05-17-2023)
        * [05-18-2023](#05-18-2023)
        * [05-19-2023](#05-19-2023)
        * [05-22-2023](#05-22-2023)
        * [05-23-2023](#05-23-2023)
        * [05-24-2023](#05-24-2023)
        * [05-25-2023](#05-25-2023)
        * [05-26-2023](#05-26-2023)
    * [June 2023](#june-2023)
        * [06-01-2023](#06-01-2023)
        * [06-02-2023](#06-02-2023)
        * [06-05-2023](#06-05-2023)
        * [06-08-2023](#06-08-2023)
        * [06-09-2023](#06-09-2023)
        * [06-13-2023](#06-13-2023)
        * [06-14-2023](#06-14-2023)
        * [06-15-2023](#06-15-2023)
        * [06-16-2023](#06-16-2023)
        * [06-20-2023](#06-20-2023)
        * [06-21-2023](#06-21-2023)
        * [06-22-2023](#06-22-2023)
        * [06-23-2023](#06-23-2023)
        * [06-26-2023](#06-26-2023)
        * [06-27-2023](#06-27-2023)
        * [06-28-2023](#06-28-2023)
    * [July 2023](#july-2023)
        * [07-05-2023](#07-05-2023)
        * [07-06-2023](#07-06-2023)
        * [07-07-2023](#07-07-2023)
        * [07-10-2023](#07-10-2023)
        * [07-11-2023](#07-11-2023)
        * [07-12-2023](#07-12-2023)
        * [07-13-2023](#07-13-2023)
        * [07-17-2023](#07-17-2023)
        * [07-18-2023](#07-18-2023)
        * [07-19-2023](#07-19-2023)
        * [07-20-2023](#07-20-2023)
        * [07-24-2023](#07-24-2023)
        * [07-25-2023](#07-25-2023)
    * [August 2023](#august-2023)
        * [08-01-2023](#08-01-2023)
        * [08-02-2023](#08-02-2023)
        * [08-03-2023](#08-03-2023)
        * [08-08-2023](#08-08-2023)
        * [08-09-2023](#08-09-2023)
        * [08-10-2023](#08-10-2023)
        * [08-14-2023](#08-14-2023)
        * [08-16-2023](#08-16-2023)
        * [08-17-2023](#08-17-2023)
        * [08-18-2023](#08-18-2023)
        * [08-21-2023](#08-21-2023)
        * [08-22-2023](#08-22-2023)
        * [08-23-2023](#08-23-2023)
        * [08-29-2023](#08-29-2023)
        * [08-30-2023](#08-30-2023)
    * [September 2023](#september-2023)
        * [09-01-2023](#09-01-2023)
        * [09-05-2023](#09-05-2023)
        * [09-06-2023](#09-06-2023)
        * [09-07-2023](#09-07-2023)
        * [09-08-2023](#09-08-2023)
        * [09-11-2023](#09-11-2023)
        * [09-12-2023](#09-12-2023)
        * [09-13-2023](#09-13-2023)
        * [09-14-2023](#09-14-2023)
        * [09-18-2023](#09-18-2023)
        * [09-19-2023](#09-19-2023)
        * [09-20-2023](#09-20-2023)
        * [09-27-2023](#09-27-2023)
        * [09-28-2023](#09-28-2023)
    * [October 2023](#october-2023)
        * [10-03-2023](#10-03-2023)
        * [10-04-2023](#10-04-2023)
        * [10-05-2023](#10-05-2023)
        * [10-06-2023](#10-06-2023)
        * [10-09-2023](#10-09-2023)
        * [10-10-2023](#10-10-2023)
        * [10-11-2023](#10-11-2023)
        * [10-12-2023](#10-12-2023)
        * [10-13-2023](#10-13-2023)
        * [10-16-2023](#10-16-2023)
        * [10-17-2023](#10-17-2023)
        * [10-18-2023](#10-18-2023)
        * [10-19-2023](#10-19-2023)
        * [10-20-2023](#10-20-2023)
        * [10-26-2023](#10-26-2023)
        * [10-27-2023](#10-27-2023)
        * [10-30-2023](#10-30-2023)
        * [10-31-2023](#10-31-2023)
    * [November 2023](#november-2023)
        * [11-01-2023](#11-01-2023)
        * [11-02-2023](#11-02-2023)
        * [11-03-2023](#11-03-2023)
        * [11-06-2023](#11-06-2023)
        * [11-07-2023](#11-07-2023)
        * [11-08-2023](#11-08-2023)
        * [11-09-2023](#11-09-2023)
        * [11-10-2023](#11-10-2023)
        * [11-15-2023](#11-15-2023)
        * [11-16-2023](#11-16-2023)
        * [11-17-2023](#11-17-2023)
        * [11-20-2023](#11-20-2023)
        * [11-21-2023](#11-21-2023)
    * [December 2023](#december-2023)
        * [12-05-2023](#12-05-2023)
        * [12-06-2023](#12-06-2023)
        * [12-07-2023](#12-07-2023)
* [2024](#2024)
    * [January 2024](#january-2024)
        * [01-16-2024](#01-16-2024)
        * [01-17-2024](#01-17-2024)
        * [01-18-2024](#01-18-2024)
        * [01-19-2024](#01-19-2024)
        * [01-22-2024](#01-22-2024)
        * [01-23-2024](#01-23-2024)
        * [01-24-2024](#01-24-2024)
        * [01-25-2024](#01-25-2024)
        * [01-26-2024](#01-26-2024)
        * [01-29-2024](#01-29-2024)
        * [01-30-2024](#01-30-2024)
        * [01-31-2024](#01-31-2024)

# 2023

## January 2023

### 01-03-2023

Back to it.

* Catch up on Slack & email.
* Land & deploy https://code.corp.creditkarma.com/ck-private/ce_enrollment-service/pull/148
* Land https://code.corp.creditkarma.com/ck-private/ce_enrollment-service/pull/141
* Check in on https://jira.creditkarma.com/browse/FTS-1917 and help out w/ that.

### 01-04-2023

* Land & deploy https://code.corp.creditkarma.com/ck-private/ce_enrollment-service/pull/141
* Assist Rigo with https://jira.creditkarma.com/browse/FTS-1917.
* Discuss pulling in https://jira.creditkarma.com/browse/FTS-1934 and working on it if approved.

### 01-05-2023

* Deploy new SQL changes.
* Assist Rigo with https://jira.creditkarma.com/browse/FTS-1917.
* I need fill out OKR2023.
* Continue working on Enrollments Roadmap. Go deeper on areas.  Address feedback.

### 01-06-2023

* Work with DBAs to deploy new SQL changes.
* Continue work on https://jira.creditkarma.com/browse/FTS-1934.  Likely pull in to sprint.

Proposal for 2023 Q3 Enrollment OKRs

Proposal for 2023 Q3 Enrollment OKRs

0.3: Create three new bureau gateway Kafka topics and have Enrollment Service publish to them.
0.5: Create three new bureau Kafka topics that the gateway's publish to and Enrollment Service consumes from.
0.7: Update the bureau gateways to consume from the new topics and use the new published object rather than the old one.  This means we will now circumvent eligibility in the gateways.
1.0: Inserts the currentState result into the database in the Enrollment Service based on the result passed back from the bureau gateways via Kafka.

### 01-09-2023

* Check in with DBAs to see if we can deploy Enrollment DB changes.
* Continue work on https://jira.creditkarma.com/browse/FTS-1934.  Likely pull in.
* Assist Rodrigo in any way to get his PR landed.
* Begin work for writing to the DB. https://jira.creditkarma.com/browse/FTS-1918

### 01-10-2023

Yesterday

* Got the Enrollments DB deployed and set up in prod!
* Worked w/ Rodrigo on his PR which is ready for review.
* Pulled in https://jira.creditkarma.com/browse/FTS-1918 and started working on it.

Today

* https://jira.creditkarma.com/browse/FTS-1918 all day.

Blockers

* None.

> Hot git tip!
> 
> Checkout your branches like so `git checkout -t origin/develop -b my-new-feature-branch`.
> 
> I often get asked this when I pair with people.  I set up my branches to basically follow this structure (which is not the default if you just do `git checkout -b my-new-branch` while being on `develop`).
> ```
>    ┌──────────────┐           ┌─────────────────────────────┐
> ┌──│origin/develop│           │origin/my-new-feature-branch │◀─┐
> │  └──────────────┘           └─────────────────────────────┘  │
> │                                                              │
> │                                                              │
> │            ┌─────────────────────┐                           │
> └─git pull──▶│my-new-feature-branch│────────git push───────────┘
>              └─────────────────────┘
> ```
> I also have
> ```
> [branch]
> 	autosetuprebase = always
> ```
> in my `~/.gitconfig` so I don't have to remember to add the `--rebase` flag to `git pull` every time.  (I almost never want to do a merge pull.)
> 
> What does this do?
> 
> Well it means you can be working locally on your feature branch.  And lets say someone has landed some new work on `develop` and you want your branch up-to-date.  Not only that.  You want your commit(s) on *top* because this is new work (i.e. you don't want to do a traditional merge).  Now you just `git pull`.  It does what your brain probably intuitively thinks you're doing anyways and what you actually want.  It's also neater than using the "merge develop into my branch" button on Github because again it doesn't create a merge commit.  On the seemingly rare occassion you actually want to pull in the latest from your branch just `git pull origin/my-new-feature-branch`.  I use that about... once a month when someone commits to my branch we're pairing on and I want their changes locally.  I use the aforementioned pull and rebase `develop` about... 10 times a day.
> 
> I have aliased is to `git work` which you can steal here if you want. https://github.com/jsatk/dotfiles/blob/ck/tag-git/gitconfig#L122-L135
> 
> Anyways.  I hope this was helpful and feel free to ask questions if something doesn't make sense.

#### Notes from meeting w/ Anu

* Add Splunk or NR metrics to see is one early option.
* Figure out what discrepancy level we're okay with.
* You can do append history in BQ when we ETL it.
* #etl-customers channel.
* We'll have to make changes in two repos.  Mention if you want rolling append or update only.
* We can't do the `currentState` until Kafka topics get set up.
* We'll have to batch inserts to the DB otherwise we'll run into issues.

Enrollment V2 Concerns/Suggestions

- Can we use NR even before DB write to validate whether the eligibility rules are working correctly.
- As this is not an append only table, can we possibly have any issues?
    - It is possible to create a rolling view in BQ as well if we have to keep historical records for audit.
- What are the ranges for discrepancies?
    - Are we expecting exact match? If not, we should define an acceptable error range
- Any rollback plan in case there is an issue? True up might just handle it automatically
- What is the additional load on DB from enrollment service, especially during true up?
    - There can be issue in replication logic if we do too many inserts quickly in the DB. That issue came up in Lexus Nexus and something we are accepting for in Income project as well.
- Is there any dedup logic during true up?
    - A user logins after they have been deactivated. That is automatically captured?
- How are we going to verify the un-enrollment from DB without the reverse Kafka topic?
- True-up will become slow due to additional DB call. Is that a cancer? John brought up this point in TDD

### 01-11-2023

Yesterday

* https://jira.creditkarma.com/browse/FTS-1918 all day.
* Helped Rodrigo w/ PR a bit more.

Today

* https://jira.creditkarma.com/browse/FTS-1918 all day.
    * I'm doing a sort of initial pass at cleaning up the ported over work and making it a lot more type safe.
* Chase down some Enrollment V2 concerns.

Blockers

* None

### 01-12-2023

Yesterday

* Prep for FTS-1918 all day.  Opened a PR.
* Helped Rodrigo w/ PR a bit more.
* Chase down some Enrollment V2 concerns.

Today

* Flex out some Enrollment V2 tickets that need more info.
* Get Rodrigo's work out.
* Hopefully land my work (please review).
* Open PR for FTS-1918.

Blockers

* None

### 01-13-2023

Yesterday

* Flex out some Enrollment V2 tickets that need more info.
* Heavy work on FTS-1918.  DB stuffs.

Today

* FTS-1918 (hoping to get a PR out for this, or at least part of it).
* FTS-1934

Blockers

* None

### 01-17-2023

Friday

* FTS-1918
* FTS-1934

Today

* Deploy prep work for FTS-1918
* Focus on Roadmap FTS-1934

Blockers

* None

### 01-18-2023

Yesterday

* Deploy prep work for FTS-1918

Today

* More work for FTS-1918
* Focus on Roadmap FTS-1934

Blockers

* None

### 01-23-2023

Friday

* Work on Enrollments V2 roadmap (FTS-1934).

Today

* Work on Enrollments V2 roadmap (FTS-1934).
    * Address feedback from Gowtham :)
* Get PR out for FTS-1918 (write to DB).

Blockers

* None

### 01-24-2023

Yesterday

* Work on Enrollments V2 roadmap (FTS-1934).
    * Address feedback from Gowtham :)
* Work on FTS-1918 (write to DB).
* Finish setting up computer.

Today

* Work on Enrollments V2 roadmap (FTS-1934).
    * Address feedback from Gowtham :)
* Get PR out for FTS-1918 (write to DB).

Blockers

* None

Rotate Experian password

Email: exp-pid-admin@creditkarma.com
Users: ck_prod / ck_prod2
Security Questions: creditkarma

You can't paste Experian link into Slack because it hits it.

### 01-25-2023

Yesterday

* Work on Enrollments V2 roadmap (FTS-1934).
    * Address feedback from Gowtham :)
* Work on FTS-1918 (write to DB).

Today (literally the same as yesterday)

* Work on Enrollments V2 roadmap (FTS-1934).
    * Address feedback from Gowtham :)
* Work on FTS-1918 (write to DB).

Blockers

* The amount of time in the day.

### 01-26-2023

Yesterday

* Work on Enrollments V2 roadmap (FTS-1934).
    * Address feedback from Gowtham
* Work on FTS-1918 (write to DB).

Today

* Address feedback on Enrollments V2 Roadmap (FTS-1934).
* Open PR for FTS-1918 (write to DB).

Blockers

* The amount of time in the day.

### 01-30-2023

Friday

* Go-karted.
* Wrestled with TUGDD alerts.

Today

* Write tests for my open PR for FTS-1918 (write to DB).
* Host review meeting and address feedback on Enrollments V2 Roadmap (FTS-1934).
* Keep digging on this TUGDD issue (SI-9025).

Blockers

* The amount of time in the day.

## February 2023

### 02-02-2023

Tuesday

* FTS-1918 PR

Yesterday

* Sanity break

Today

* FTS-1918 PR. Specifically IT tests.

Blockers

* Amount of time in a day.

### 02-06-2023

Friday

* Deploy FTS-1918
* Work on IT tests for FTS-1918
* Automerge robot all our repos

Today

* Deploy FTS-1918 & fully ramp
* Work on IT tests for FTS-1918 and getting it to work in Circle CI specifically

Blockers

* Amount of time in a day.

### 02-07-2023

Yesterday

* Deploy FTS-1918 & fully ramp
* Roadmap discussion and feedback

Today

* Address/research/etc. feedback from Roadmap discussion yesterday.
* Fast follow on some code improvements to FTS-1918.
* Work on IT tests for FTS-1918 and getting it to work in Circle CI specifically

Blockers

* None

### 02-13-2023

Friday

* Fast follow on some code improvements to FTS-1918.
* Address/research/etc. feedback from Roadmap discussion.

Today

* Deploy Enrollment Service.
* Focus on Roadmap rest of the day (which will be most of the day).

Blockers

* None

### 02-14-2023

* Let UK folks know not to deploy Enrollment Service.
* Figure out how to only load DB configs for US.

### 02-15-2023

Yesterday

* FTS-2001: Worked on urgent fix for Enrollment Service all day.

Today

* Deploy said fix, FTS-2001.
* Enrollments V2 Roadmap.

Blockers

* None

### 02-16-2023

Yesterday

* FTS-2001: Worked on testing this and addressing some PR feedback from UK team.
* Roadmap updates!
* Meetings.

Today

* Meetings.
* Roadmap updates when I'm not in meetings.

Blockers

* My brain

### 02-17-2023

Yesterday

* Worked on roadmap.
* Met with UK team and got the ball rolling on adding the DB to UK.
* Did all of my upward perspectives reviews.  There was a lot.

Today

* Finish up roadmap feedback.

Blockers

* None

### 02-21-2023

Friday

* Reworked roadmap!

Today

* Roadmap diagramming!

Blockers

* My brain.

Notes on Roadmap from Gowtham

* Add pros & cons for multiple topics.
* Find out maintenance costs.

### 02-22-2023

Yesterday

* Reworked roadmap!
* Roadmap diagramming!

Today

* Deploy Enrollment Service
* Reworked roadmap!
* Roadmap diagramming!

Blockers

* My brain.

### 02-23-2023

Yesterday

* Deployed Enrollment Service!!!
* Reworked roadmap!
* Roadmap diagramming!
* UK enrollment service investigating.

Today

* UK guys are on latest Enrollment Service w/ no issues!!! (This is a big deal because new database, hvault stuff, talon upgrade, ripping out CEL, etc.)
* Deploy Enrollment Service w/ Talon upgrade and ABA rollback in US.
* Present on Roadmap to a subset of folks!  Then apply their feedback and define next steps.

Blockers

* 🤷‍♂️

### 02-28-2023

Friday

* Talon upgrades.
* Roadmap planning.

Yesterday

* Sick

Today

* Praying I don't have COVID.
* Roadmap!
* Ramping up on Income work.
* Possibly landing & deploying some Talon updates.

Blockers

* None

Notes from meeting w/ Solon

* Maybe run all back enrollments through BQ data.
* Database merging is nervous!
* Experian has users in the most incorrect state.

1. Are we okay to consolidate the talking-to-the-bureaus into PES? (PES becomes the gateway)
2. Where do we want to store the data? We have Enrollments DB, PES’s DB, as well as all three bureau DBS.
3. When we store the data how do we want to store it? (Shape of the DB?)

## March 2023

### 03-01-2023

Yesterday

* Roadmap work (specifically sharing w/ Solon).
* Landing several open PRs.
* Wrapping up sprint work.

Today

* Roadmap feedback from Solon & Gowtham.
* Deploying the latest Enrollment Service.

Blockers

* None

### 03-02-2023

Yesterday

* Implement feedback from Solon & Gowtham.
* Deploying the latest Enrollment Service.

Today

* Wrap up roadmap for presentation.

Blockers

* None

### 03-03-2023

Yesterday

* Started on FTS-1986 (pub/sub for income)
* More work on FTS-2021 (roadmap)

Today

* Review feedback in culture amp.
* FTS-2021 Chat w/ Anu about some roadmap sections I need his help w/ and wrap that up.
* FTS-1986 (pub/sub for income)

Blockers

* People's calendars.

### 03-06-2023

Friday

* Review feedback in culture amp.
* FTS-1986 (pub/sub for income)

Today

* FTS-2021 Chat w/ Anu about some roadmap sections I need his help w/ and wrap that up.  Roadmap all day.  I'm going to start on a slide deck for my presentation on Friday to Rima.

Blockers

* None

### 03-07-2023

Yesterday

* FTS-2021: Great chat w/ Anu. Roadmap all day.

Today

* FTS-2021: Great chat w/ leaders.  Addressing feedback.

Blockers

* None

### 03-08-2023

Yesterday

* FTS-2021: Roadmap all day.

Today

* FTS-2021: Roadmap all day.

Blockers

* None

### 03-09-2023

Yesterday

* FTS-2021: Roadmap all day.

Today

* FTS-2021: Roadmap all day.

Blockers

* None

Question from Veenit.

there is PartnerId (PermID for TU, EPIN for Experian and CID for Equifax) and
there is this a CK version of partnerUuid that we create for each user for the
sole purpose of sharing it with bureaus (only implemented in LexisNexis right
now and potentially ADP too) so that we don't have to share a
dwNumericId/NumericId(CKID). How are we accounting for this in the larger
enrollments v2 roadmap? Apologies if you've already answered this question
somewhere and if so, please point me to it. I'm catching up on slack in this
channel...

I think this question is conflating two things.

1. Are we going to paydown the tech debt of storing PartnerIds in our Enrollments SQL database that Lightspeed uses?

While this increases scope for this project I think this is worth doing since we are doing DB modifications in this project.

From the Roadmap under the "Proposed Changes" section:

> * Move storage of partnerId (PII) out of our MySQL databases and store in Member Service. Update Lightspeed to fetch partnerId from Member Services rather than our DB(s).
>   * A note on this: Enrollments does not currently use or need the PartnerId that’s generated from batch requests, however we receive it in the reconciliation file from the partners and store it. Lightspeed uses it from us.

2. Are we going to create a partnerUuid for Experian, Equifax, and Transunion and stop sending them the NumericIds?

Who is asking for this?  If it's a horizontal ask from security we need to handle it like we do any other horizontal ask from security.  Put it in an OKR, plane and scope for it.

For my Enrollments V2 Roadmap the answer is that is out of scope for this roadmap and project.  Moving all three bureaus completely off of using NumericId and using a partnerUuid that we create and manage the mapping for would involve a massive coordinated effort with all three bureaus and significantly complicate things.  If we want to do this in the future this should be its own stand-alone OKR/effort.

### 03-10-2023

Yesterday

* ~FTS-2021: Roadmap all day~ Actually didn't focus on this a ton as the big presentation meeting got pushed back two weeks and several folks needed my help pairing so I prioritized that + meetings.

Today

* FTS-2021: Roadmap all day.

Blockers

* Being distracted by the news.

### 03-13-2023

Friday

* FTS-2021: Roadmap all day.
* Deep-dive PR reviews

Today

* FTS-2021: Roadmap all day.
* FTS-1986: Land pub/sub consumer PR.

Blockers

* None

This has caused issues with users getting into incorrect enrollment states often because Financial Tools & Services (FTS) do not know the user’s current state and what state they should be in (wished state) for Transunion and Experian.

ON CALL notes

Wednesday

* https://alerts.newrelic.com/accounts/3364952/incidents/1138426170/violations | https://alerts.newrelic.com/accounts/3364952/incidents/1138426186/violations | https://alerts.newrelic.com/accounts/2848826/incidents/1138426283/violations All self resolved
* https://alerts.newrelic.com/accounts/3364952/incidents/1138576793/violations | https://alerts.newrelic.com/accounts/3364952/incidents/1138576865/violations | https://alerts.newrelic.com/accounts/2848826/incidents/1138576976/violations | All self resolved eventually
* https://alerts.newrelic.com/accounts/3053422/incidents/1138635073/violations
* https://alerts.newrelic.com/accounts/2848826/incidents/1138733267/violations This TUGDD alert was flakey and plagued me all week.  Eventually self resolves.
* https://alerts.newrelic.com/accounts/3053422/incidents/1138763199/violations Self resolved.
* https://alerts.newrelic.com/accounts/3053422/incidents/1138835061/violations Self resolved.
* https://alerts.newrelic.com/accounts/3364952/incidents/1138862886/violations | https://alerts.newrelic.com/accounts/2848826/incidents/1138863281/violations Transunion was having issues.
* https://alerts.newrelic.com/accounts/3053422/incidents/1138910658/violations | https://alerts.newrelic.com/accounts/3364952/incidents/1138926246/violations Transunion was having issues.
* https://alerts.newrelic.com/accounts/3053422/incidents/1139007029/violations Self resolved.
* https://alerts.newrelic.com/accounts/3053422/incidents/1139073765/violations Self resolved.
* https://alerts.newrelic.com/accounts/3053422/incidents/1139230893/violations Self resolved.

Thursday

* https://alerts.newrelic.com/accounts/3364952/incidents/1140097189/violations | https://alerts.newrelic.com/accounts/3364952/incidents/1140097426/violations | https://alerts.newrelic.com/accounts/2848826/incidents/1140100393/violations | https://alerts.newrelic.com/accounts/3364952/incidents/1140102827/violations | https://alerts.newrelic.com/accounts/3364952/incidents/1140102859/violations | https://alerts.newrelic.com/accounts/3364952/incidents/1140102433/violations | https://alerts.newrelic.com/accounts/2848826/incidents/1140102957/violations | https://alerts.newrelic.com/accounts/2848826/incidents/1140102632/violations Transunion was having issues.
* https://alerts.newrelic.com/accounts/3364952/incidents/1140122030/violations | https://alerts.newrelic.com/accounts/3364952/incidents/1140122041/violations | https://alerts.newrelic.com/accounts/2848826/incidents/1140124293/violations | https://alerts.newrelic.com/accounts/2848826/incidents/1140125318/violations | https://alerts.newrelic.com/accounts/3364952/incidents/1140126582/violations Transunion having issues
* https://alerts.newrelic.com/accounts/3053422/incidents/1140360117/violations Self resolved.
* https://alerts.newrelic.com/accounts/2848826/incidents/1140372303/violations Transunion TUGDD issues.  Again, flakey and popped up a lot this week.
* https://alerts.newrelic.com/accounts/3364952/incidents/1140404575/violations Transunion | https://alerts.newrelic.com/accounts/3364952/incidents/1140404606/violations | https://alerts.newrelic.com/accounts/2848826/incidents/1140404582/violations Transunion was having issues.
* https://alerts.newrelic.com/accounts/3053422/incidents/1140463568/violations Self resolved.
* https://alerts.newrelic.com/accounts/3053422/incidents/1140589031/violations Self resolved.
* https://alerts.newrelic.com/accounts/3053422/incidents/1140664368/violations Self resolved.
* https://alerts.newrelic.com/accounts/3053422/incidents/1140733838/violations Self-resolved.
* https://alerts.newrelic.com/accounts/3053422/incidents/1140810454/violations Self-resolved.
* https://alerts.newrelic.com/accounts/3053422/incidents/1140876592/violations Self-resolved.
* https://alerts.newrelic.com/accounts/2848826/incidents/1141057298/violations Transunion flakey issue.  Self-resolved.

Friday

* https://alerts.newrelic.com/accounts/3053422/incidents/1141784486/violations TUGDD issue.  Flakey.  Self-resolved.
* https://alerts.newrelic.com/accounts/3053422/incidents/1141788892/violations Self-resolved.
* https://alerts.newrelic.com/accounts/3053422/incidents/1141855665/violations TUGDD issue.  Flakey.  Self-resolved.
* https://alerts.newrelic.com/accounts/3053422/incidents/1141899998/violations Self-resolved.
* https://alerts.newrelic.com/accounts/3053422/incidents/1141929140/violations TUGDD issue.  Flakey.  Self-resolved.
* https://alerts.newrelic.com/accounts/3053422/incidents/1141933121/violations Self-resolved.
* https://alerts.newrelic.com/accounts/2848826/incidents/1141963670/violations TUGDD issue.  Flakey.  Self-resolved.
* https://alerts.newrelic.com/accounts/3364952/incidents/1141963917/violations TUGDD issue.  Flakey.  Self-resolved.
* https://alerts.newrelic.com/accounts/3053422/incidents/1141998028/violations TUGDD issue.  Flakey.  Self-resolved.

### 03-21-2023

Vacationed.
Today I'm plan on chasing down a few lingering questions on the roadmap, working on the slides for the exec presentation, and working on income work (https://jira.creditkarma.com/browse/FTS-2025).

### 03-22-2023

Yesterday

* Chased down a few lingering questions on the Enrollments V2 roadmap.  Namely what to do w/ BureauIds.
* Finished first draft of the slides for the exec presentation.
* Started income work (https://jira.creditkarma.com/browse/FTS-2025).

Today

* Respond to any lingering questions on Enrollments V2 Roadmap and presentation slides.
* Get actually rolling on income work. https://jira.creditkarma.com/browse/FTS-2025

### 03-23-2023

Yesterday

* Respond to any lingering questions on Enrollments V2 Roadmap and presentation slides.
* Get actually rolling on income work. https://jira.creditkarma.com/browse/FTS-2025

Today

* Wrap up slides for presentation to Rima tomorrow for Enrollments V2.
* Finish up Income work. https://jira.creditkarma.com/browse/FTS-2025

Blockers

None

### 03-24-2023

Yesterday

* Wrap up slides for presentation to Rima tomorrow for Enrollments V2.
* Do Income work. https://jira.creditkarma.com/browse/FTS-2025

Today

* Implement feedback I got on the presentation.  Presentation moved to tuesday. :(
* Finish up Income work. https://jira.creditkarma.com/browse/FTS-2025

### 03-27-2023

Friday

* Income work wrap up.
* Responded to feedback from dry run on enrollments v2 roadmap presentation

Today

* Income work test writing.
* Finalize enrollments v2 roadmap presentation for tomorrow.

Consolidating two slides.

Proposed changes

* New Enrollments database that tracks a user’s wished & current enrollment state with a partner+product.
* Unify Eligibility logic into the Enrollments Service.
* Unify "gateway" logic into PES.
* Store all partner-specific information (such as enrollmentId) in the PES database.
* Delete EXGE, TUGE, and EFGE.
* Move True-Up out of mono/Falcon-task to GCP (via Cloud Function, Big Query, & GCS).
* Enrollments will be completely off of mono (directly).
* No longer have to run a full-population True-Up. But rather we’d run a targeted True-Up only on the users who’s state is incorrect.
* Track when an individual user fails enrollment and the number of times failed so we can surface that these users need to be looked into.
* Automate all True-Up tasks. No longer a burdensome multi-week task.

### 03-28-2023

Yesterday

* Income work PR feedback.
* Implemented feedback from dry run on Enrollments V2 roadmap presentation.
* Ran through presentation again.
* Took a few hours off yesterday afternoon due to headache.

Today

* Presentation on Enrollments V2 Roadmap.
* Test writing for Income work.
    * Currently fighting with the IT tests as they're actually trying to connect to hvault.  Something in the configs is wrong.

### 03-29-2023

Yesterday

* Finally got to present to Esha & Rima on the Enrollments V2 Roadmap.  Well received.
* Capacity planning for Enrollments next quarter.
* Fought w/ income IT tests.

Today

* Land income work, IT tests be damned.
* Take it a little easy today.  Read some of the book.
* More capacity planning work.

In my way

* Nothing

- - -

Hi!

We need to fill out this sheet (https://docs.google.com/spreadsheets/d/1nfoZqHlINApGHIeoRmjZVb5kzHK-XgBlOvGS7swhIE4/edit#gid=0) detailing what services of ours use what components from CEL.  Because we own so much we're gonna divide and conquer.

Here's how *I* recommend doing this.  Using this method took me 5m or less a service.

1. `cd` to whatever repo you're working on.
2. `git checkout develop` (if you're not already on it) and `git pull`.
3. `git grep "import com.creditkarma.creditecosystem" | sed 's/^.*\\.scala://' > list-of-imports.txt`
4. Open `list-of-imports.txt` in whatever editor/viewer you want.  If you're unsure just run `open list-of-imports.txt`
5. Go through the spreadsheet and put an `x` next to each module/component you find in the imports list.

Jesse: TUGE, EXGE, Enrollment
John: EFGE, EFGA
Yash: TUGA, CAS,
Anu: TUGDD, TUGI
Rodrigo: Webhook, SFTP
Rohit:  EXGI, EXGA
Danbi: Income, KAMP

This will likely take you 10-20m.  Please try to get to this by Thursday, but if you can't it's not a big deal.

## April 2023

### 04-06-2023

Yesterday

* OKR planning

Today

* OKR planning

In my way

* OKR planning

### 04-18-2023

Prop Test Talk

```sh
scala-cli repl --scala 2.12.17 --dep org.scalatestplus::scalacheck-1-17:3.2.14.0 --dep org.scalatest::scalatest:3.2.14
```

```scala
import org.scalatestplus.scalacheck.ScalaCheckDrivenPropertyChecks, org.scalatest.flatspec.AnyFlatSpec, org.scalatest.matchers.should.Matchers, org.scalacheck.Prop.forAll
```

```scala
case class Person(name: String, age: Int)

val propPerson1 = forAll { (s: String, n: Int) =>
  val p = Person(s, n)

  p.age > -1
}

val rasonableAge = Gen.choose(0,110)

val propPerson2 = forAll { (s: String, reasonabAge) =>
  val p = Person(s, reasonableAge)

  p.age > -1
}

```

```scala
class PartnerTest extends AnyFlatSpec with Matchers with ScalaCheckDrivenPropertyChecks {
  it should "create a person who's age is always a reasonable age" in forAll { (s: String, n: Int) =>
    val p = Person(s, n)

    p.age should be > -1
  }
}
```

### 04-19-2023

* Read through doc from last week.  Create action items.
* Set up RAID meeting for next week.
* Figure out NPS stuff.  Last mile check.


### 04-20-2023

* 1-on-1 feedback.
* NPS stuff.
* Write tickets for AMS topic verification & DQM if needed.
* Document Talon 2.8 stuff.
* Write password rotation stuff.

### 04-21-2023

* 1-on-1 feedback.
* NPS stuff.
* Write tickets for AMS topic verification & DQM if needed.
* Document Talon 2.8 stuff.

0.3: Enrollment Service is consuming the relevant enrollment eligibility info on the login, registration, & deactivation via Kafka.
0.5: All partner eligibility logic is being conducted and the results stored in Enrollment Service (i.e. LexisNexis gets added).
0.7: Update the object published to the four Enrollment Services to match the new model we are getting from AMS.
1.0: Remove RPC calls from mono to Enrollment Service for US. (They still need to exist for Canada & UK.)

### 04-24-2023

* 1-on-1 feedback.
* NPS stuff.
* Write tickets for AMS topic verification & DQM if needed.
* Document Talon 2.8 stuff.

Major TODOs for Enrollments V2 Project

* [x] Create a project TDD/Roadmap/Lead the Design review
* [ ] Talk to NPS team about last-mile check.  We need to figure out if we truly do or do not need to talk to NPS.
* [ ] Create a GANTT project tracker (Assign ownership of the GANTT sections).
* [ ] Identify risks at the start of the project by doing a RAID Analysis
* [ ] Define project scope
* [ ] Breakdown of tasks
* [x] How many resources do we need?  A: 5 full time engineers, however I have concerns about having 3 junior engineers being in the mix for such a critical project.  Would like another senior.
* [x] Own the team's OKRs.  Maintain OKR sheet, weekly update by Thursday at 10am
* [ ] Communicate the project status on a regular cadence.  Example: "This workstream X is falling behind, the old target date was X and the new target date is X, and this will impact the overall project timeline by X"
* [ ] Communicate resource constraints. Example: "Hey since X person is out, we are not making the same progress against original timelines/plans, so I need X person to help me out this sprint"
* [ ] Set the expectations to team members to communicate with you on current risks/blockers with their work/timeline slips.

### 04-25-2023

Yesterday

* Get Enrollment Service working w/ new Circle stuff + Rocky images.
* Do lots of Enrollments V2 prep/planning.

Today

* Chase down whether or not we need to work with NPS for Enrollments V2.
* Document some Talon 2.8 + Rocky upgrade stuff that's missing from their docs.
* Probably deal w/ on-call wildness.

### 04-26-2023

* Chase down whether or not we need to work with NPS for Enrollments V2.
* Document some Talon 2.8 + Rocky upgrade stuff that's missing from their docs.
* Probably deal w/ on-call wildness.
* Write the jiras for Enrollments V2

### 04-27-2023

* Chase down whether or not we need to work with NPS for Enrollments V2.
* Document some Talon 2.8 + Rocky upgrade stuff that's missing from their docs.
* Deal w/ on-call wildness.
* Write the jiras for Enrollments V2

## May 2023

### 05-02-2023

* Enrollments V2 ticket writing.
* RAID analysis doc.
* adding info to the TDD.
* Schedule test of AMS.

### 05-03-2023

* Enrollments V2 ticket writing.
* RAID analysis doc.
* adding info to the TDD.
* Schedule test of AMS.
* Write doc for switching from develop to main.

### 05-04-2023

Yesterday

* Fire fighting w/ CEL
* Fire fighting w/ TU WSDL update
* Jira ticket writing
* Finally got a dang passing build for upgrading Enrollment Service to the latest dev and production images! And deployed it.
* Helped a few folks with code challenges.
* Dug into how to test AMS's new kafka topic for us.
* I did NOT have time to clean up the RAID analysis doc.

Today

* Clean up RAID analysis doc and share it out.
* Add to TDD for Enrollments V2.
* Investigate how handle batch for next quarter.
* Start on Income Service talon 2.8 update.

### 05-08-2023

Thursday

* Wrote CEL Talon 2.8 migration guide.
* Wrote proposal for changing primary branch names.
* Upgraded income service to latest CEL.
* Dug into some Enrollments V2 ticket writing.
* Organized the RAID analysis of Enrollments V2.
* Reviewed Gowtham's BQ queries for DQM.

Today

* FTS-2102: Test AMS Kafka endpoint for Enrollments V2.
* Wrap up ticket writing w/ Danbi.
* Get CCI yaml w/ orbs working for ce_enrollment-service.

### 05-09-2023

Yesterday

* FTS-2102: Test AMS Kafka endpoint for Enrollments V2.
* Wrap up ticket writing w/ Danbi.
* Get CCI yaml w/ orbs working for ce_enrollment-service.

Today

* FTS-2102: Test AMS Kafka endpoint for Enrollments V2.
* Get CCI yaml w/ orbs working for ce_enrollment-service.

### 05-10-2023

Yesterday

* FTS-2102: Test AMS Kafka endpoint for Enrollments V2.
* Get CCI yaml w/ orbs working for ce_enrollment-service.
* Talon 2.8 upgrades.

Today

* FTS-2102: Test AMS Kafka endpoint for Enrollments V2.

   ┌───────────────────────────────────────┐
   │         The Eisenhower Matrix         │
   └───────────────────────────────────────┘

   ┌────────┐           ┌────────────┐
   │ Urgent │           │ Not Urgent │
   └────────┘           └────────────┘
┌─┐┌──────────────────┐*┌──────────────────┐
│I││ Do               │*│ Schedule         │
│m││                  │*│                  │
│p││                  │*│                  │
│o││                  │*│                  │
│r││                  │*│                  │
│t││                  │*│                  │
│a││                  │*│                  │
│n││                  │*│                  │
│t││                  │*│                  │
└─┘│                  │*│                  │
   │                  │*│                  │
   │                  │*│                  │
   └──────────────────┘*└──────────────────┘
   *****************************************
┌─┐┌──────────────────┐*┌──────────────────┐
│N││ Delegate         │*│ Delete           │
│o││                  │*│                  │
│t││                  │*│                  │
│I││                  │*│                  │
│m││                  │*│                  │
│p││                  │*│                  │
│o││                  │*│                  │
│r││                  │*│                  │
│t││                  │*│                  │
│a││                  │*│                  │
│n││                  │*│                  │
│t││                  │*│                  │
└─┘└──────────────────┘*└──────────────────┘

### 05-15-2023

Today

* FTS-2102: Test AMS Kafka endpoint for Enrollments V2.
* Get CCI yaml w/ orbs working for ce_enrollment-service.
* Review Yash's TrueUp TDD.

Notes from Chang

* You need to write your own promo packet.
* Chang to go to bat for.
* Get more impact on OiC and Hydration.
* Get testimonials from other leaders.

### 05-16-2023

Yesterday

* FTS-2102: Test AMS Kafka endpoint for Enrollments V2.
* Get CCI yaml w/ orbs working for ce_enrollment-service.

Today

* FTS-2102: Test AMS Kafka endpoint for Enrollments V2.
* Review Yash's TrueUp TDD.
* Figure out NPS stuff for Enrollment Services.
* Break down Jira tickets more.
* Figure CE Income Service maybe.

### 05-17-2023

Yesterday

* FTS-2102: Test AMS Kafka endpoint for Enrollments V2.
* Figure out NPS stuff for Enrollment Services.

Today

* FTS-2102: Test AMS Kafka endpoint for Enrollments V2.
  * Worked w/ Gowtham to try to fix.
  * Weirdness likely w/ the yamls.
* Review Yash's TrueUp TDD.
* Figure out NPS stuff for Enrollment Services.
  * Started convo w/ Nate & Alicia.
* Break down Jira tickets more.
  * Gowtham gave feedback. Do this.
* Figure CE Income Service maybe.
  * Need to file a ticket for investigating what's b0rked about income as is.  BEFORE the CEL upgrade.
* File psec tickets for bulk stuff w/ HSM.

### 05-18-2023

* FTS-2102: Test AMS Kafka endpoint for Enrollments V2.
  * Read through Gowtham's notes and try to unb0rk the yamls.
  * File platsec/paas tickets to get bulk zone secrets for hsm.
* Review Yash's TrueUp TDD.
* Figure out NPS stuff for Enrollment Services.
  * Pinged Alicia.
* Break down Jira tickets more.
  * Gowtham gave feedback. Do this.
* Deploy CE Income Service

What happens if a user is attempted to enroll when they are already enrolled.

### 05-19-2023

* FTS-2102: Test AMS Kafka endpoint for Enrollments V2.
  * File platsec/paas tickets to get bulk zone secrets for hsm.
* Review Yash's TrueUp TDD.
* Figure out NPS stuff for Enrollment Services.
  * Document this in the TDD.  Get Alicia to write it?
  * Wrote paragraph myself.  Asked Alicia and Nate to approve/contribute.
  * They approved!
* Break down Jira tickets more.
  * Gowtham gave feedback. Do this.

### 05-22-2023

* FTS-2102: Test AMS Kafka endpoint for Enrollments V2.
  * File platsec/paas tickets to get bulk zone secrets for hsm.
* Review Yash's TrueUp TDD.
* Break down Jira tickets more.
  * Gowtham gave feedback. Do this.
* Prep for ScalaCheck presentation tomorrow.
* Update roadmap with more accurate quarterly schedule.
* Set up weekly sync.

### 05-23-2023

* Review Yash's TrueUp TDD.
* Break down Jira tickets more.
  * Gowtham gave feedback. Do this.
* Prep for ScalaCheck presentation tomorrow.
* Update roadmap with more accurate quarterly schedule.
* Set up weekly sync.
* FTS-2102: Test AMS Kafka endpoint for Enrollments V2.
* FTS-2106: Break up Enrollment Service by country.
* Fix b0rked local environment.

### 05-24-2023

* FTS-2102: Test AMS Kafka endpoint for Enrollments V2.
  * Still super borked
* FTS-2106: Break up Enrollment Service by country.
  * PR open. Initial work done.  Tests needed
* Review Yash's TrueUp TDD.
* Break down Jira tickets more.
  * Gowtham gave feedback. Do this.
* Update roadmap with more accurate quarterly schedule.
  * Did
* Set up weekly sync.

### 05-25-2023

* FTS-2102: Test AMS Kafka endpoint for Enrollments V2.
  * Still super borked.  Meeting w/ Talon.
* FTS-2106: Break up Enrollment Service by country.
  * PR open. Initial work done.  Tests needed.
* Review Yash's TrueUp TDD.
* Break down Jira tickets more.
  * Gowtham gave feedback. Do this.
* Set up weekly sync.

Fix:

```
{ [-]
   @timestamp: 2023-05-25T15:45:25.530-07:00
   @version: 1
   level: WARN
   level_value: 30000
   logger_name: org.apache.kafka.clients.consumer.ConsumerConfig
   message: The configuration 'ssl.key.password.default' was supplied but isn't a known config.
   thread_name: streams-actor-system-akka.kafka.default-dispatcher-17
}
```

For 2108: Try to break this apart, my suggestion is:
Outstanding questions:
Do we want to publish to the same/existing topic that these consume from?
Can we actually do this? What's our alternative if we cannot do this conversion?
Create this as a spike because it defines the scope of the story. Once you make a decision,
The story should just be implementation. I.e. take this thrift object Y in enrollment service, and write a converter to create X object
You can also make it part of implementation to write code to use this new converter and plug it into the existing producer logic

For https://jira.creditkarma.com/browse/FTS-2115
What exactly has to be done? You can break it down more as a list of steps:
Create a new Partner Product model in Enrollments for LexisNexis
Write a new function to evaluate eligibility for LexisNexis.
What eligibility rules should this have? If this is unknown then consider breaking 1 and 2 into 2 tickets
This can be a separate ticket, write testing as part of the criteria.

You also have data quality checks in there, which can be a separate ticket

FTS-2120 looks fine

### 05-26-2023

* You need to write the tickets for the stuff you and Yash discussed.

## June 2023

### 06-01-2023

* You need to write the tickets for the stuff you and Yash discussed.
  * Done.
* Write tests for International Stuff.

### 06-02-2023

* Write tests for International Stuff.
* Update GANTT chart.
* Badger people for reviews.

### 06-05-2023

* Write tests for International Stuff.
* Update GANTT chart.
  * Did!  Good job!
* Land PRs!
  * Hunt down DBAs and get them to create user.
  * Get HSM user set up!

### 06-06-2023

* Write tests for International Stuff.
* Get HSM user set up!
  * Awaiting them to finish the ticket.

Steps to reproduce issue with SBT.

* Clear all the metals/bloop stuff out.
* Run `sbt compile`
* It compiles happy.
* Open any file in a plain editor like nano and throw in something that should not compile such as `val foo: String = 10`.
* Re-run `sbt compile`
* It correctly fails to compile.
* Open nvim w/ metals. Accept the prompts that detect that it's a scala build space. Let it compile via bloop.
* Just for sanity re-run `sbt compile`
* It correctly fails to compile.
* In nvim switch your build server to sbt.  Let it finish building.
* Re-run `sbt compile`
* It compiles happy. WHAT?!

### 06-08-2023

* Fix bilgo thingy.  Make PR.
* TrueUp!!!
* Lets dig into how we want to handle preprod vs prod and the DB.  Set up a meeting w/ Jean.

* When we do TrueUp at night we need to figure out if the message from TrueUp is out-of-date.
* TrueUp will send OOW timestamp, lastLogin timestamp, users table timestamp
* We send timestamp this quarter over via Enrollment Service.
* FOLLOW UP WITH AMS TEAM.

### 06-09-2023

* Run TrueUp.
  * Done!
* Enter yesterday's numbers for TrueUp.
  * Done!
* Start conversation on AMS RPC call for new TrueUp.
  * Yash did this!!!
  * They agreed!
* Write tickets for 11am grooming.
  * Done!
* Deploy Enrollment Service.
  * Done!
* Dig into weird webhook deployment issue Rigo was dealing.
  * Did!
* Land and deploy International.
  * Didn't.  Getting UK folks to review as well.
* Look into why AMS Kafka Consumer isn't going to the right index.
  * Filed ticket. https://jira.creditkarma.com/browse/OBS-4256
* Look into the below error logs.
  * Filed a ticket!
* Review all the code.

   > In Streaming Profile
   > ```
   >   message: The configuration 'ssl.key.password.default' was supplied but isn't a known config.
   >   message: The configuration 'ssl.key.password.key' was supplied but isn't a known config.
   > ```

   > ```
   >   logger_name: com.creditkarma.talon.stats.clients.influxdb.InfluxDbHttpClient
   >   message: Issue sending stats
   >   stack_trace: com.twitter.finagle.ChannelClosedException: ChannelException at remote address: telegraf-service.telegraf.svc.cluster.local/10.191.22.108:2201 from service: influx. Remote Info: Upstream Address: Not Available, Upstream id: Not Available, Downstream Address: telegraf-service.telegraf.svc.cluster.local/10.191.22.108:2201, Downstream label: influx, Trace Id: d9adb04dee7158e7.d9adb04dee7158e7<:d9adb04dee7158e7
   > ```

   > In RPC Profile
   > ```
   >   message: failure on (Encrypt Content) command: operation(ENCRYPT), key(ce-enrollments-eligibility-encrypted-criteria-sb-AES-key), algo(AES/GCM): HSM Fatal Error 202: Invalid username or password at remote address: hsm-proxy-4.hsm-proxy.hsm-proxy/10.198.161.110:9100. Remote Info: Not Available
   > ```

   > ```
   >   message: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
   > ```

   > ```
   >   message: Verification of shard (695) failed: finishConnect(..) failed: Connection refused: primary.sdb87.prod.us-central1.ckint.io/10.137.50.187:3306 at remote address: primary.sdb87.prod.us-central1.ckint.io/10.137.50.187:3306. Remote Info: Not Available
   > ```

### 06-13-2023

* [x] Oncall handoff.
* [x] Start doc on rollout of switching over to AMS from mono RPC for USA.
* [x] International UK testing for Enrollment Service refactor.
    * Got approval/sign-off from UK folks.
* [x] Attempt to understand the new TrueUp piece.

### 06-14-2023

* [x] Deploy International split of Enrollment Service.
* [x] Work w/ team to schedule deploys of the rest of the work.
* [x] Finish doc on rollout of switching over to AMS from mono RPC for USA.

### 06-15-2023

* [-] Get sign-off on rollout plan of switching over to AMS from mono RPC for USA.
* [x] Write up tickets for missing tasks.
* [ ] Research some Scalacheck stuff.
* [x] Prep for CE OE.

Things FTS has done to improve on-call.

* https://go/fts-oncall
* Investigate every single page.  Actually read the Splunk logs.  Chase it down.
* https://code.corp.creditkarma.com/ck-private/ce_transunion-gateway-direct-dispute-service/pull/296
* https://code.corp.creditkarma.com/ck-private/ce_equifax-gateway-enrollment-service/pull/272

### 06-16-2023

On Tuesday dig into unifying the two models for representing incoming and fresh out of DB data and consider killing the helper object that's just a grab bag of utilities.

### 06-20-2023

* [ ] Dig into unifying the two models for representing incoming and fresh out of DB data and consider killing the helper object that's just a grab bag of utilities.
* [x] Prep for Enrollments presentation.
* [x] Assign security vulns to Rodrigo.
* [x] Assign metrics work to Anu.
* [x] Wrap up roll-out plan.
    * Waiting on reviews now.
* [x] Come up w/ plan on removing RPC traffic from mono.
    * Can we do this since UK still uses it?  Yes we can!
* [ ] Figure out next work for folks.

### 06-21-2023

* [x] Figure out AMS stuff for trueup.  Next steps.  Do we need NumericId Service?  Do they want us to call the bulk endpoint or the member?
  * We do need Numeric ID Mapping Service.
  * Wrote ticket to add Numeric ID Mapping Serivce.
  * Not sure if we want to use the bulk or member endpoint for AMS.
    * They can only support 5 at a time? :(  Says refactor is easy though.
* [x] Ask UK folks to deploy latest Enrollment Service.
  * Asked.  Follow up  tomorrow.
* [x] Figure out next work for folks.
* [ ] Respond to reviews on roll-out.
* [ ] Dig into unifying the two models for representing incoming and fresh out of DB data and consider killing the helper object that's just a grab bag of utilities.

```scala
case class ThingUnvalidated(fooA: Int, fooB: Int)
sealed abstract case class Thing(value: ThingUnvalidated)
object Thing {
  def preview(t: ThingUnvalidated): Option[Thing]
  def review(t: Thing): ThingUnvalidated = t.value
}
```

```scala
  EnrollmentEligibility(snapshot.numericId, countryCode, snapshot, isTrueUp = false)
    .fold(
      e => Future(e.asLeft[Unit]),
      ee => writeToDB(ee),
    )

  private def writeToDB(ee: EnrollmentEligibility): Future[Either[StreamProcessingError, Unit]] =
    fDatabase
      .flatMap(
        _.insert(ee.numericId, ee.countryCode, ee.isTrueUp, concatEnrollmentEligibility(ee))
          .map(_ => ().asRight)
          .rescue { case e: Throwable => Future(DatabaseError(s"Failed to write to DB: ${e.getMessage}").asLeft) }
      )
      .rescue { case e: Throwable => Future(DatabaseError(s"Failed to create a shard: ${e.getMessage}").asLeft) }
```

### 06-22-2023

* [x] Follow up with User Management folks on updating AMS Endpoint to support more than 5 NumericIDs at once.
    * So we aren't blocked. BUT we are not sure that if we send say 10K Numeric IDs that it won't time out.
* [x] Dig into unifying the two models for representing incoming and fresh out of DB data and consider killing the helper object that's just a grab bag of utilities.
* [ ] Respond to reviews on roll-out.  Write up more thorough rollout like Gowtham asked.
* [x] Write ticket for wiring up Kafka consumption to down-stream publishing to Partner Specific Gateways.
    * https://jira.creditkarma.com/browse/FTS-2211

### 06-23-2023

* [ ] Respond to reviews on roll-out.  Write up more thorough rollout like Gowtham asked.
* [x] Finish up unifying models rewrite.
* [ ] Finish up career plan for Gowtham.

### 06-26-2023

* [ ] Respond to reviews on roll-out.  Write up more thorough rollout like Gowtham asked.
* [x] Finish up career plan for Gowtham.
* [ ] Review remaining work for this quarter.  Write up any tickets that are needed.

### 06-27-2023

* [x] Respond to reviews on roll-out.  Write up more thorough rollout like Gowtham asked.
    * Got good feedback from Gowtham.  Write up a more step-by-step doc.  Pretend the reader doesn't know anything.
* [x] Review remaining work for this quarter.  Write up any tickets that are needed.
* [x] Land PR on model rewrite and deploy.
* [x] Get PR out for reading configs better.
    * We ultimately decided to not do this and leave it "risky".  I wrote a thorough description in the PR.

### 06-28-2023

* [ ] Write rollout guide for dummies.
* [ ] Deploy to UK?

## July 2023

### 07-05-2023

* [x] Update OKR sheet for leadership.
* [x] Finish deploy for Enrollment Service.
* [x] Create tickets for CEL audit, see highlighted colors.
* [x] Create tickets for switch over to main (1 ticket), delegate this to managers.
* [x] Write tests for EnrollmentEligibility.asModel.
* [ ] Follow up on how-to-deploy to UK.

OKR Update for Leadership

> 07/05 — Hit 0.7. (Update the object published to the four Enrollment Services to match the new model we are getting from AMS.). Rollout plan in review.  LexisNexis actually being calculated and stored in the DB as part of Eligibility (FTS-2233) is in review.  Converting the different AMS bulk endpoint response into our domain model (EligibilityCriteriaSnapshot) method written and in review.  This is crucial to the TrueUp OKR.  Completely reworked internal data modeling for better interoperability (it was showing its limitations).  Next up this week is adding metrics to NR + Splunk.  And actually rolling this out so that we are consuming from AMS and not mono!
>
> 6/27 Working on finalizing roll out plan for mono. Adding metrics and logic to publish AMS events downstream
> - Planning to hit 0.7 end of week of 7/3
> "
>
> "6/21
> Wrote rollout plan and solicited reviews. Deployed EligibilityCriteriaSnapshot conversion logic. Opened PR for TrueUp GCP bucket cronjob. Significant code clean-up refactors.
>
> 6/14
> Deployed new Kafka Consumer. Verified in production with AMS team. Finished up and deployed splitting up Enrollment Service into north-america & UK packages. Began work on supporting the new GCP TrueUp.
>
> 6/12
> Finished up and ready-to-deploy splitting up Enrollment Service into country-specific packages. Added LexisNexis eligibility logic into Enrollment Service. Added the ability to convert from the thrift type AMS sends us to the thrift type that the partner-specific gateways use so we can start using AMS as the source for USA traffic ASAP. Finished up investigation into if there will be DB work to support LexisNexis (there will NOT be!). Begin work on data-quality metrics checks for LexisNexis in enrollment service.
>
> 6/5: Finished up new Kafka Consumer work. Confirmed sending info we need. More work on splitting up enrollment service into country-specific packages. PR out for updating Enrollments DB to support more partners. Moved Enrollments Service build to use latest Circle CI template (orbs), and added toggle to allow eligibility checks and DB writes during TrueUp.
>
> 5/25: Nearing end of work on new Kafka Consumer. Confirmed w/ legal we can decouple Credit Monitoring from Preferences (i.e. we don't need it for enrollments). Split up Enrollment Service into country-specific packages so we can more easily manage each since this work is US only for now.
>
> 5/18: Started on work to create framework for new consumer. Working with legal to revisit Decoupling of Credit Monitoring from Preferences"

### 07-06-2023

* [x] Follow up on how-to-deploy to UK.
    * They still haven't replied.  Following up tomorrow.
* [ ] Respond to feedback on Rollout Plan.
* [x] Help Rohit w/ his PR.
    * Scheduled review for Friday.
* [x] Chase down the flare score stuff.
    * Barked about this a lot.  Waiting.

### 07-07-2023

* [x] Respond to feedback on Rollout Plan.
    * Still more to do.
* [x] Follow up on how-to-deploy to UK.
    * Asked again... JFC.
* [x] Help Rohit w/ his PR.
* [x] Chase down the flare score stuff.
    * Asked again... JFC.

### 07-10-2023

* [x] Respond to feedback on Rollout Plan.
    * Still more to do.
* [ ] Figure out next steps on OKR work.
* [x] Figure out next steps on TrueUp work.
    * In progress.

### 07-11-2023

* [x] Come up w/ metrics & splunk logs to use for monitoring for rollout plan.
* [ ] Figure out next steps on OKR work.
* [ ] Figure out next steps on TrueUp work.
* [x] Get the test logging to STFU.

```sql
SELECT
  count(
    distinct(u.numericId)
  )
FROM
  `prod-ck-abl-data-53.mysql.users` u
  left join `prod-ck-abl-data-53.mysql.personal` p using(numericId)
  left join `prod-ck-abl-data-53.mysql.login_count` l using(numericId)
  left join `prod-ck-abl-data-53.mysql.terms_of_use` t using(numericId)
  left join `prod-ck-abl-data-53.mysql.faketui_users` f using(numericId)
WHERE
  u.deactivation = 0
  AND p.oowValidated > 0
  AND DATE(
    TIMESTAMP_SECONDS(l.lastLoginTs)
  ) >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH)
  AND t.agreementId in(2, 7)
  AND f.numericId is null;
```

TL;DR — If we remove the `lastTermsOfServiceAccepted` check from EFGE and TUGE it will cause 311,760 new users to be enrolled in Equifax (CKI Daily, Credit Monitoring, Accelerated Inquiry Alerts) and 684,764 users to be enrolled in Transunion (CKI Daily).


EQUIFAX (All products)

Users who would be enrolled in Equifax if TOS is removed: 61,941,771
Users who are enrolled in Equifax today w/ TOS: 61,630,011
Users who would be added: 311,760
According to Looker we have 61,500,749 enrolled today.

TRANSUNION CKI

Users who would be enrolled in Transunion if TOS is removed: 91,841,472
Users who are enrolled in Transunion today w/ TOS: 91,156,708
Users who would be added: 684,764
According to Looker we have 91,875,773 enrolled today.

### 07-12-2023

* OKRs....

0.3 Publishing to PES from Enrollment Service & consuming in PES new Enrollments object.
0.5 Send enrollments info to Equifax from PES; no longer go through EFGE.
0.7 Publish result of Equifax call back to Enrollment Service from PES & update the current state in the database.
1.0 Deprecate EFGE entirely.

* [x] Add metrics to rollout plan.
* [x] Figure out next steps on OKR work.
    * Metrics.
* [x] Figure out next steps on TrueUp work.

### 07-13-2023

* [x] Add metrics for launch.
* [ ] Write milestone estimates for Gowtham.
    * He made a ticket.
* [x] Remove ToS checks from Equifax and Transunion.
    * PRs out.

### 07-17-2023

* [x] Check metrics for Enrollments V2 rollout.  Decide on what the next steps are.  Are we good to go?
* [x] Land PR for new metrics.
* [ ] Finalize enrollments OKR for next quarter (refinement of our meeting last Wednesday)
* [ ] Assist with TrueUp work.
* [ ] Prep for retro on experian SI.

### 07-18-2023

* [x] Prep for retro on experian SI.
    * Ran.  Doing follow-up on Action Items tomorrow as we ran out of time.
* [x] Land and deploy any outstanding PRs related to monitoring Enrollments V2.
    * Done.  All deployed except NR metrics in Enrollment Service.
* [x] Decide on if we feel comfortable "lauching" and if so when.
    * DQMs are wonky.  Digging in tomorrow.
* [ ] Assist with TrueUp work.
* [ ] Finalize enrollments OKR for next quarter (refinement of our meeting last Wednesday)

Yash's fixed queries

| DQM                                                                            New Numbers   Old Numbers
|-------------------------------------------------------------------------------|------------|-------------|
| EFX Accelerated Alerts USA: We have this many users enrolled but not eligible | 41,105     | 3,315,622   |
| EFX CKI USA: We have this many users enrolled but not eligible                | 110,385    | 13,805,088  |
| EFX Credit Monitoring USA: We have this many users enrolled but not eligible  | 37,266     | 1,153,034   |
| Experian CKI USA: We have this many users enrolled but not eligible           | 19,621     | 3,066,033   |
| TU CKI USA: We have this many users enrolled but not eligible                 | 785        | 2,651,657   |
| TU Enhanced Alert USA: We have this many users enrolled but not eligible      | 527        | Not posting |
| TU Direct Dispute USA: We have this many users enrolled but not eligible      | 788        | 2,533,502   |
| TU Credit Alert USA: We have this many users enrolled but not eligible        | 1,937      | 2,116,581   |

### 07-19-2023

* [x] Decide on if we feel comfortable "lauching" and if so when.
    * Yep. Lets do it tomorrow.
* [-] Write DQMs between mono and partner DBs.
    * Yash is doing this!
* [x] Write NR query around new metrics we’re processing.
* [x] Get reviews and deploy PR that supports mono true up still.
* [x] Add stuff to promo packet!!!
    * Enrollments basically done.
    * Need to add other stuff.

* Switched off publish via RPC in Enrollment Service test env approximately 8:45pm PT.
* Enabled publish via Kafka in Enrollment Service test env approximately 8:53pm PT
* Publishing in Enrollment Service test env https://onenr.io/0BR66BAbdRO
* Transunion consumption in test env https://onenr.io/0OwvO3D4yRv
* At this point... I can't tell a difference.

### 07-20-2023

Transunion – Users unenrolled when they should be enrolled (for each product there is 1 query)

```sql
--- TU -> Users unenrolled and they should be enrolled in CKI
select count(distinct(p.numericId))
--*,timestamp_seconds(l.lastLoginTs),timestamp_seconds(per.oowValidated),timestamp_seconds(p.deactivation)
from `prod-ck-abl-data-53.mysql.users` p  join
`prod-ck-abl-data-53.mysql.personal` per using(numericId)
join
(select numericId,lastLoginTs from
`prod-ck-abl-data-53.mysql.login_count`
qualify row_number() over (partition by numericId order by autoTs desc) = 1) l
using (numericId)
 join
(select e.numericId,e.enrollmentState,e.createTs from `prod-ck-abl-data-53.mysql.batch_enrollment_user_state` e
qualify row_number() over (partition by numericId order by autoTs desc) = 1) r
on cast(r.numericId as INT64)=p.numericId
where (p.deactivation is null or p.deactivation=0) and r.enrollmentState in (4,5,6) and DATE(TIMESTAMP_SECONDS(l.lastLoginTs)) >= DATE_SUB(CURRENT_DATE, INTERVAL 48 MONTH) and per.oowValidated>0
```

```sql
--- TU -> Users unenrolled and they should be enrolled in CREDITALERT
select count(distinct(p.numericId))
--*,timestamp_seconds(l.lastLoginTs),timestamp_seconds(per.oowValidated),timestamp_seconds(p.deactivation)
from `prod-ck-abl-data-53.mysql.users` p  join
`prod-ck-abl-data-53.mysql.personal` per using(numericId)
join
(select numericId,lastLoginTs from
`prod-ck-abl-data-53.mysql.login_count`
qualify row_number() over (partition by numericId order by autoTs desc) = 1) l
using (numericId)
 join
(select e.numericId,e.unenrolledTs,e.productName from `prod-ck-abl-data-53.tuge_mysql.transunion_user_enrollment_status` e
qualify row_number() over (partition by numericId order by autoTs desc) = 1) r
on cast(r.numericId as INT64)=p.numericId
where (p.deactivation is null or p.deactivation=0) and (r.unenrolledTs is not null or r.unenrolledTs>0) and DATE(TIMESTAMP_SECONDS(l.lastLoginTs)) >= DATE_SUB(CURRENT_DATE, INTERVAL 48 MONTH) and per.oowValidated>0 and r.productName like 'CreditAlert'
```

```sql
--- TU -> Users unenrolled and they should be enrolled in ENHANCED ALERT
select count(distinct(p.numericId))
--*,timestamp_seconds(l.lastLoginTs),timestamp_seconds(per.oowValidated),timestamp_seconds(p.deactivation)
from `prod-ck-abl-data-53.mysql.users` p  join
`prod-ck-abl-data-53.mysql.personal` per using(numericId)
join
(select numericId,lastLoginTs from
`prod-ck-abl-data-53.mysql.login_count`
qualify row_number() over (partition by numericId order by autoTs desc) = 1) l
using (numericId)
 join
(select e.numericId,e.unenrolledTs,e.productName from `prod-ck-abl-data-53.tuge_mysql.transunion_user_enrollment_status` e
qualify row_number() over (partition by numericId order by autoTs desc) = 1) r
on cast(r.numericId as INT64)=p.numericId
where (p.deactivation is null or p.deactivation=0) and (r.unenrolledTs is not null or r.unenrolledTs>0) and DATE(TIMESTAMP_SECONDS(l.lastLoginTs)) >= DATE_SUB(CURRENT_DATE, INTERVAL 48 MONTH) and per.oowValidated>0 and r.productName like 'EnhancedAlert'
```

Equifax – Users unenrolled when they should be enrolled(1 query per product)

```sql
--- EFX -> Users unenrolled and they should be enrolled in CKI
select count(distinct(p.numericId))
--*,timestamp_seconds(l.lastLoginTs),timestamp_seconds(per.oowValidated),timestamp_seconds(p.deactivation)
from `prod-ck-abl-data-53.mysql.users` p  join
`prod-ck-abl-data-53.mysql.personal` per using(numericId)
join
(select numericId,lastLoginTs from
`prod-ck-abl-data-53.mysql.login_count`
qualify row_number() over (partition by numericId order by autoTs desc) = 1) l
using (numericId)
 join
(select e.numericId,e.currentState,e.featureName from `prod-ck-abl-data-53.mysql.equifax_enrollment_feature` e
qualify row_number() over (partition by numericId order by autoTs desc) = 1) r
on cast(r.numericId as INT64)=p.numericId
where (p.deactivation is null or p.deactivation=0) and r.currentState in (0) and DATE(TIMESTAMP_SECONDS(l.lastLoginTs)) >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) and per.oowValidated>0
and r.featureName like '%ONE_B_ADHOC_REPORT%'
```

```sql
--- EFX -> Users unenrolled and they should be enrolled in BATCH Credit monitoring
select count(distinct(p.numericId))
--*,timestamp_seconds(l.lastLoginTs),timestamp_seconds(per.oowValidated),timestamp_seconds(p.deactivation)
from `prod-ck-abl-data-53.mysql.users` p  join
`prod-ck-abl-data-53.mysql.personal` per using(numericId)
join
(select numericId,lastLoginTs from
`prod-ck-abl-data-53.mysql.login_count`
qualify row_number() over (partition by numericId order by autoTs desc) = 1) l
using (numericId)
 join
(select e.numericId,e.currentState,e.featureName from `prod-ck-abl-data-53.mysql.equifax_enrollment_feature` e
qualify row_number() over (partition by numericId order by autoTs desc) = 1) r
on cast(r.numericId as INT64)=p.numericId
where (p.deactivation is null or p.deactivation=0) and r.currentState in (0) and DATE(TIMESTAMP_SECONDS(l.lastLoginTs)) >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) and per.oowValidated>0
and r.featureName like '%ONE_B_CREDIT_MONITORING%'
```

```sql
--- EFX -> Users unenrolled and they should be enrolled in Instant alerts
select count(distinct(p.numericId))
--*,timestamp_seconds(l.lastLoginTs),timestamp_seconds(per.oowValidated),timestamp_seconds(p.deactivation)
from `prod-ck-abl-data-53.mysql.users` p  join
`prod-ck-abl-data-53.mysql.personal` per using(numericId)
join
(select numericId,lastLoginTs from
`prod-ck-abl-data-53.mysql.login_count`
qualify row_number() over (partition by numericId order by autoTs desc) = 1) l
using (numericId)
 join
(select e.numericId,e.currentState,e.featureName from `prod-ck-abl-data-53.mysql.equifax_enrollment_feature` e
qualify row_number() over (partition by numericId order by autoTs desc) = 1) r
on cast(r.numericId as INT64)=p.numericId
where (p.deactivation is null or p.deactivation=0) and r.currentState in (0) and DATE(TIMESTAMP_SECONDS(l.lastLoginTs)) >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) and per.oowValidated>0
and r.featureName like '%ONE_B_REAL_TIME_CREDIT_MONITORIN%'
```

Experian – Users unenrolled when they should be enrolled in CKI

```sql
--- EXP -> Users unenrolled and they should be enrolled in CKI
select count(distinct(p.numericId))
--*,timestamp_seconds(l.lastLoginTs),timestamp_seconds(per.oowValidated),timestamp_seconds(p.deactivation)
from `prod-ck-abl-data-53.mysql.users` p  join
`prod-ck-abl-data-53.mysql.personal` per using(numericId)
join
(select numericId,lastLoginTs from
`prod-ck-abl-data-53.mysql.login_count`
qualify row_number() over (partition by numericId order by autoTs desc) = 1) l
using (numericId)
 join
(select e.numericId,e.enrollmentState,e.createTs from `prod-ck-abl-data-53.mysql.experian_batch_enrollment_user_state` e
qualify row_number() over (partition by numericId order by autoTs desc) = 1) r
on cast(r.numericId as INT64)=p.numericId
where (p.deactivation is null or p.deactivation=0) and r.enrollmentState in (4,5,6) and DATE(TIMESTAMP_SECONDS(l.lastLoginTs)) >= DATE_SUB(CURRENT_DATE, INTERVAL 48 MONTH) and per.oowValidated>0
```

Transunion – Users enrolled when they should be unenrolled (for each product there is 1 query)

```sql
--- TU -> Users enrolled and they should be unenrolled in CKI - Compliance
select count(distinct(p.numericId))
--*,timestamp_seconds(l.lastLoginTs),timestamp_seconds(per.oowValidated),timestamp_seconds(p.deactivation)
from `prod-ck-abl-data-53.mysql.users` p  join
`prod-ck-abl-data-53.mysql.personal` per using(numericId)
join
(select numericId,lastLoginTs from
`prod-ck-abl-data-53.mysql.login_count`
qualify row_number() over (partition by numericId order by autoTs desc) = 1) l
using (numericId)
 join
(select e.numericId,e.enrollmentState,e.createTs from `prod-ck-abl-data-53.mysql.batch_enrollment_user_state` e
qualify row_number() over (partition by numericId order by autoTs desc) = 1) r
on cast(r.numericId as INT64)=p.numericId
where ((p.deactivation is not null and p.deactivation>0) OR DATE(TIMESTAMP_SECONDS(l.lastLoginTs)) < DATE_SUB(CURRENT_DATE, INTERVAL 48 MONTH) OR (per.oowValidated=0 OR per.oowValidated is null)) and r.enrollmentState in (1,2,3)
```

```sql
--- TU -> Users enrolled and they should be unenrolled  in CreditAlert- Compliance
select count(distinct(p.numericId))
--*,timestamp_seconds(l.lastLoginTs),timestamp_seconds(per.oowValidated),timestamp_seconds(p.deactivation)
from `prod-ck-abl-data-53.mysql.users` p  join
`prod-ck-abl-data-53.mysql.personal` per using(numericId)
join
(select numericId,lastLoginTs from
`prod-ck-abl-data-53.mysql.login_count`
qualify row_number() over (partition by numericId order by autoTs desc) = 1) l
using (numericId)
 join
(select e.numericId,e.unenrolledTs,e.productName from `prod-ck-abl-data-53.tuge_mysql.transunion_user_enrollment_status` e
qualify row_number() over (partition by numericId order by autoTs desc) = 1) r
on cast(r.numericId as INT64)=p.numericId
where ((p.deactivation is not null and p.deactivation>0) OR DATE(TIMESTAMP_SECONDS(l.lastLoginTs)) < DATE_SUB(CURRENT_DATE, INTERVAL 48 MONTH) OR (per.oowValidated=0 OR per.oowValidated is null)) and r.productName like 'CreditAlert' and (r.unenrolledTs is null or r.unenrolledTs=0)
```

```sql
--- TU -> Users enrolled and they should be unenrolled  in Enhanced Alert- Compliance
select count(distinct(p.numericId))
--*,timestamp_seconds(l.lastLoginTs),timestamp_seconds(per.oowValidated),timestamp_seconds(p.deactivation)
from `prod-ck-abl-data-53.mysql.users` p  join
`prod-ck-abl-data-53.mysql.personal` per using(numericId)
join
(select numericId,lastLoginTs from
`prod-ck-abl-data-53.mysql.login_count`
qualify row_number() over (partition by numericId order by autoTs desc) = 1) l
using (numericId)
 join
(select e.numericId,e.unenrolledTs,e.productName from `prod-ck-abl-data-53.tuge_mysql.transunion_user_enrollment_status` e
qualify row_number() over (partition by numericId order by autoTs desc) = 1) r
on cast(r.numericId as INT64)=p.numericId
where ((p.deactivation is not null and p.deactivation>0) OR DATE(TIMESTAMP_SECONDS(l.lastLoginTs)) < DATE_SUB(CURRENT_DATE, INTERVAL 48 MONTH) OR (per.oowValidated=0 OR per.oowValidated is null)) and r.productName like 'EnhancedAlert' and (r.unenrolledTs is null or r.unenrolledTs=0)
```

Equifax – Users enrolled when they should be unenrolled (for each product there is 1 query)

```sql
--- EFX -> Users enrolled and they should be unenrolled in CKI -- Compliance
select count(distinct(p.numericId))
--*,timestamp_seconds(l.lastLoginTs),timestamp_seconds(per.oowValidated),timestamp_seconds(p.deactivation)
from `prod-ck-abl-data-53.mysql.users` p  join
`prod-ck-abl-data-53.mysql.personal` per using(numericId)
join
(select numericId,lastLoginTs from
`prod-ck-abl-data-53.mysql.login_count`
qualify row_number() over (partition by numericId order by autoTs desc) = 1) l
using (numericId)
 join
(select e.numericId,e.currentState,e.featureName from `prod-ck-abl-data-53.mysql.equifax_enrollment_feature` e
qualify row_number() over (partition by numericId order by autoTs desc) = 1) r
on cast(r.numericId as INT64)=p.numericId
where ((p.deactivation is not null and p.deactivation>0) OR DATE(TIMESTAMP_SECONDS(l.lastLoginTs)) < DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) OR (per.oowValidated=0 OR per.oowValidated is null)) and r.featureName like '%ONE_B_ADHOC_REPORT%'and r.currentState in (1)
```

```sql
--- EFX -> Users enrolled and they should be unenrolled in BATCH Credit monitoring -- Compliance
select count(distinct(p.numericId))
--*,timestamp_seconds(l.lastLoginTs),timestamp_seconds(per.oowValidated),timestamp_seconds(p.deactivation)
from `prod-ck-abl-data-53.mysql.users` p  join
`prod-ck-abl-data-53.mysql.personal` per using(numericId)
join
(select numericId,lastLoginTs from
`prod-ck-abl-data-53.mysql.login_count`
qualify row_number() over (partition by numericId order by autoTs desc) = 1) l
using (numericId)
 join
(select e.numericId,e.currentState,e.featureName from `prod-ck-abl-data-53.mysql.equifax_enrollment_feature` e
qualify row_number() over (partition by numericId order by autoTs desc) = 1) r
on cast(r.numericId as INT64)=p.numericId
where ((p.deactivation is not null and p.deactivation>0) OR DATE(TIMESTAMP_SECONDS(l.lastLoginTs)) < DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) OR (per.oowValidated=0 OR per.oowValidated is null)) and  r.featureName like '%ONE_B_CREDIT_MONITORING%' and r.currentState in (1)
```

```sql
--- EFX -> Users enrolled and they should be unenrolled in Instant alerts -- Compliance
select count(distinct(p.numericId))
--*,timestamp_seconds(l.lastLoginTs),timestamp_seconds(per.oowValidated),timestamp_seconds(p.deactivation)
from `prod-ck-abl-data-53.mysql.users` p  join
`prod-ck-abl-data-53.mysql.personal` per using(numericId)
join
(select numericId,lastLoginTs from
`prod-ck-abl-data-53.mysql.login_count`
qualify row_number() over (partition by numericId order by autoTs desc) = 1) l
using (numericId)
 join
(select e.numericId,e.currentState,e.featureName from `prod-ck-abl-data-53.mysql.equifax_enrollment_feature` e
qualify row_number() over (partition by numericId order by autoTs desc) = 1) r
on cast(r.numericId as INT64)=p.numericId
where ((p.deactivation is not null and p.deactivation>0) OR DATE(TIMESTAMP_SECONDS(l.lastLoginTs)) < DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) OR (per.oowValidated=0 OR per.oowValidated is null)) and r.featureName like '%ONE_B_REAL_TIME_CREDIT_MONITORIN%' and r.currentState in (1)
```

Experian – Users enrolled when they should be unenrolled  in CKI

```sql
--- EXP -> Users enrolled and they should be unenrolled in CKI - Compliance
select count(distinct(p.numericId))
--*,timestamp_seconds(l.lastLoginTs),timestamp_seconds(per.oowValidated),timestamp_seconds(p.deactivation)
from `prod-ck-abl-data-53.mysql.users` p  join
`prod-ck-abl-data-53.mysql.personal` per using(numericId)
join
(select numericId,lastLoginTs from
`prod-ck-abl-data-53.mysql.login_count`
qualify row_number() over (partition by numericId order by autoTs desc) = 1) l
using (numericId)
 join
(select e.numericId,e.enrollmentState,e.createTs from `prod-ck-abl-data-53.mysql.experian_batch_enrollment_user_state` e
qualify row_number() over (partition by numericId order by autoTs desc) = 1) r
on cast(r.numericId as INT64)=p.numericId
where ((p.deactivation is not null and p.deactivation>0) OR DATE(TIMESTAMP_SECONDS(l.lastLoginTs)) < DATE_SUB(CURRENT_DATE, INTERVAL 48 MONTH) OR (per.oowValidated=0 OR per.oowValidated is null)) and r.enrollmentState in (1,2,3)
```

Next steps:

* Error message we are seeing in production after attmepting to change from mono RPC to AMS Kafka for enrollment information: `message: Failed publishing to service bus with error Some(An error occurred during encoding/encrypting)`
* Do we have bulk HSM credentials in production? https://jira.creditkarma.com/browse/PSEC-4300 https://jira.creditkarma.com/browse/PSEC-4304
* Do we need seperate/different encryption keys in member zone vs bulk zone?
* Check whether the crypto key can be shared between member and bulk.
* What's difference between remote key & crypto key?

### 07-24-2023

* The NumericIds that TUGE & EFGE could not find in Member service were Canadian users.
* FTS (me) is coding defensively to not process users who are Canadian who come via Kafka from AMS.
* UM team is adding a filter on their end to only put US users on the topic.

Another pass at OKR breakdown.

Work breakdown

Kafka Provisioning & Prep

* Write thrift for passing Enrollment Eligibility results from Enrollment Service to PES. (1/2 week)
* Write thrift for passing Enrollment Eligibility results from PES to Enrollment Service (daily recon results). (1/2 week)
* Create new Kafka topic for publishing/consuming enrollment eligibility results from Enrollment Service to PES. (1 week)
* Create new Kafka topic for publishing/consuming partner enrollment results from PES to Enrollment Service. (1 week)

PES Changes

* Create Kafka consumer to PES to consume the new thrift to the new topic. (1 week)
* Create Kafka publisher in PES to publish LexisNexis & Experian batch results. (2 week)
* Update PES DB to support Experian-specific info. (2 week)
* Update Batch code to support Experian (4 week)
    * Add certs needed to be able to upload to SFTP server we use for Experian
    * Migrate batch code from Experian to PES
    * Refactor PES code to support more than one partner.  Integrating two partners (and later a 3rd) will 

Enrollment Service Changes

* Create Kafka producer to Enrollment Service to publish the new thrift to the new topic. (2 week)
* Create Kafka consumer in Enrollment Service to consume LexisNexis & Experian batch results. (1 week)
* Fix issue with incorrect casing in DB of Partner names. (1 week)
    * Not required, but very nice to have.
* Update `currentState` in Enrollments DB after consuming from topic PES publishes to. (1 week)
* Update Enrollment Eligibility to *not* publish users who are already in the correct eligible state to the topic PES will consume from.  I.E. After running a user through Enrollment Eligibility the user's wishedState is the same as their currentState.  Do nothing in this case. (1 week).

Data Migration

* Write DQM checks between LexisNexis DB and Enrollments DB. (1 week)
* See the open questions below, but we'll need to put the Experian data in a state that's read/write-able from PES. (2 week)

Deprecation of EXGE

* Migrate existing Experian alerts (NR & Splunk) to read from the appropriate places.  Updating these will likely be a case-by-case basis and involve some alerts reading from Enrollments (both traffic and DB) sand from PES (both traffic & DB). (2 week)
* Fix outstanding issues with DQM checks between mono DB and Enrollments DB. (1 week)
* Disable EXGE from uploading file for reading by Experian. (1 week)
* Once data parity is confirmed and new flow is working as expected, modify the PES DB to remove unused/no-longer-needed/no-longer-updated columns. (2 week)
* Sunset EXGE (2 week)
    * Archive repo in github.
    * Remove all old NR alerts.  Remove all old Splunk alerts.

Open Questions:

* Do we want separate topics and consumers for sending LexisNexis & Experian from Enrollment Service to PES?
* For updating PES DB to support Experian-specific info do we add a new table(s) to support the necessary Experian-specific info or update permissions for PES to be able to read & write from Experian DB.
* Do we want separate topics and consumers for sending LexisNexis & Experian from PES to Enrollment Service?

Dependencies

* Factor in topic & user provisioning for both Enrollment Service -> PES and PES -> Enrollment Service.  Will result in working w/ PlatSec &/or AppSec.
* Work with correct folks to bring EXGE service fully down in production and test env.
    * Consider things like removing from Falcon, Circle CI, Jenkins, Flare.

Total weeks: 29

### 07-25-2023

* [x] Deploy latest Enrollment service that filters out canadian traffic
* [-] Why is traffic amounts so different between mono and AMS?
    * They don't know.  Maybe mono does biometric?
* [-] Does biometric logins come through mono and to us via RPC? We originally were told they weren’t but I’d like to document that reasoning. Or if we are in fact wrong and biometric does come through mono and to us via RPC we need to figure out what next steps are
    * Still don't know.
* [x] On call hand off.

Are we getting enrollment criteria when a user does a biometric login? If no, we have issue. If yes, how is AMS dealing w/ this?

## August 2023

### 08-01-2023

* [-] Why is traffic amounts so different between mono and AMS?
    * They don't know.  Maybe mono does biometric?
* [-] Catch up on latest everything.

### 08-02-2023

* [ ] Continue traffic amount investigation w/ UM folks.
* [ ] Launch?

### 08-03-2023

* [ ] Investigate issue w/ launch.
* [ ] Add logging.

### 08-08-2023

Sick.  But landed logging stuff.  Having the on-call deploy it.

### 08-09-2023

* [x] Launch
    * Failed due to EXGE `membershipDate`

### 08-10-2023

In lieu of being able to get Enrollments V2 out due to Equifax `membershipDate` issues... going to work on property based testing stuff.

#### Digging in to the `memberDate` issue.

> Alright. You asked for it. We're getting into the weeds a little bit, but as a fellow software engineer I think you'll appreciate this and it'll add clarity. :wink: 
> 
> The new AMS thrift data simply tells us if a user is `passedOutOfWallet`. It's a simple `Boolean`, *not* a `BooleanCriteria`. This is what we are switching to. 
> 
> What is a `BooleanCriteria` you ask? A custom defined CK Thrift type. It looks like this.
> 
> ```scala
> object BooleanCriteria extends ValidatingThriftStructCodec3[BooleanCriteria] with StructBuilderFactory[BooleanCriteria] {
> val Struct: TStruct = new TStruct("BooleanCriteria")
>     val ValueField: TField = new TField("value", TType.BOOL, 1)
>     
>     val ValueFieldManifest: Manifest[Boolean] = manifest[Boolean]
>     val MetaField: TField = new TField("meta", TType.STRUCT, 2)
>     
>     val MetaFieldManifest: Manifest[com.creditkarma.thrift.creditecosystem.eligibility.v1.CriteriaMetadata] = manifest[com.creditkarma.thrift.creditecosystem.eligibility.v1.CriteriaMetadata]
> ```
> 
> The monolith via RPC sends over the following for `passedOutOfWallet`.
> 
> ```php
>         $criteria->passedOutOfWallet = $this->toBooleanCriteria(
>             $this->getPersonalTbl()->isOowValidated($numericId->getId()),
>             $this->getThriftDateTime($this->getPersonalTbl()->getOowValidated($numericId->getId())),
>             $source
>         );
> ```
> 
> As you can see there the `BooleanCriteria`'s `MetaField` has a `ThriftDateTime` on it. What's super weird though, what we pass to the `getThriftDateTime` method here... appears to be a numericId?
> 
> That code looks like this:
> 
> ```php
>     /**
>      * Many of our table store a timestamp, so either convert it to a Thrift DateTime, or just return the current datetime.
>      *
>      * @param null|int $timestamp
>      *
>      * @return ThriftDateTime
>      */
>     private function getThriftDateTime($timestamp = null)
>     {
>         $thriftDateTime = new ThriftDateTime();
> 
>         if (null === $timestamp) {
>             $datetime = new \DateTime('now', new DateTimeZone("UTC"));
>         } else {
>             $datetime = new \DateTime('now', new DateTimeZone("UTC"));
>             $datetime->setTimestamp($timestamp);
>         }
> 
>         $thriftDateTime->value = $datetime->format(\DateTime::ISO8601);
> 
>         return $thriftDateTime;
>     }
> ```
> 
> And even weirder the `toBooleanCriteria` code in mono looks like this:
> 
> ```php
>     /**
>      * @param bool           $value
>      * @param ThriftDateTime $dateTimeLastChanged
>      * @param int            $source
>      *
>      * @return BooleanCriteria
>      */
>     private function toBooleanCriteria($value, $dateTimeLastChanged = null, $source = CriteriaSourcesEnum::MONO)
>     {
>         $criteria           = new BooleanCriteria();
>         $criteria->value    = $value;
>         $criteria->meta     = $this->toMetaData($dateTimeLastChanged, $source);
> 
>         return $criteria;
>     }
> ```
> 
> It literally calls the date information on `meta` `dateTiemLastChanged`. What? NOT Membership?
> 
> Okay if you're still reading, bless you. Here's where we run into trouble in the attempt to switch to AMS for our Enrollments traffic.
> 
> The code in EXGE is as follows:
> 
> ```scala
> object BatchEnrollmentEligibilityModule {
>   def batchEligibilityProcessor(
>     inactiveMonthsLimit: Int
>   ): EligibilityCriteriaSnapshot => Map[BatchEnrollmentProduct, (EligibilityDeclaration, Option[String])] =
>     (criteria: EligibilityCriteriaSnapshot) => {
>       val eligibilityDeclaration = EligibilityProcessor.evaluateEligibility(
>         Seq(
>           EligibilityProcessor.isActive(criteria, AccountState(AccountStatesEnum.Active, None)),
>           EligibilityProcessor.passedOutOfWallet(criteria, default = true),
>           isActiveWithin(criteria, inactiveMonthsLimit),
>         )
>       )
> 
>       val dateTime = criteria.enrollmentCriteria
>         .collect({
>           case EnrollmentCriteriaSnapshot(
>                 _,
>                 _,
>                 _,
>                 _,
>                 Some(BooleanCriteria(_, Some(CriteriaMetadata(Some(dt), _)))),
>                 _,
>                 _,
>                 _,
>               ) =>
>             LocalDateTime
>               .parse(dt.value, DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ssZ"))
>               .format(DateTimeFormatter.ofPattern("MMddyyyy"))
>         })
> 
>       Map(CKIDaily -> Tuple2(eligibilityDeclaration, dateTime))
>     }
> }
> ```
> 
> Our new AMS thrift code will result in the `meta` field on the `BooleanCritera` there to be a `None`.  This then causes EXGE, later on, to throw an error because this the `dateTime` in the `Map` that's returned here is a `None`.  The mono code results in this always being a `Some` and we assign it to a value called `membershipDate`.  We store it in our DB and also send it over to Experian.  We, CK, do not seem to use this `membershipDate` anywhere.  And in fact, from my investigation (the php code above) it appears this is *not* _when the user actually became a member_ like the variable name would indicate.  It actually the current datetime.
> 
> So all this long explanation to say, can we safely just change the code in EXGE to set the `membershipDate` to the `lastActiveDate` (which we DO have on the new AMS data).  If we do this all will be well from a code/compilation/etc stand point. However I'm trying to deeply understand this `membershipDate` field correctly on the off chance that it is used in some way I am missing.  I do not want to cause an SI. :)
> 
> Phew.  Thank you for reading.

### 08-14-2023

* [x] Deploy EXGE.
* [x] Launch/rollout/toggle AMS Kafka.

### 08-16-2023

* [ ] Come up with appropriate way to celebrate mono decomp Enrollments work.
* [x] Check stats post launch and put in rollout doc.
* [ ] Update Roadmap doc.
* [x] Fix your new unit + integration + more accurate code coverage step in PR.
* [x] Add Bradley's suggestion for fixing tests to your PR.
* [ ] Add to Jen's email template for Enrollments launch.
* [ ] Write explainer/primer for international and share it with them.
* [x] Run small trueup to see if it works.
    * ✅ Publish US RPC — Published is seeing an uptick. As expected. https://onenr.io/00jl7a4r0RW
    * ✅ RPC success to Enrollment Service is seeing a significant increase. As expected.
    * ✅ Publish rate from Enrollment Service to the Enrollment Gateways is seeing a significant increase. As expected.
    * ✅ TUGE consumption rate is seeing a significant increase. As expected.
* [ ] Get initial PR out for property based tests.

### 08-17-2023

* [ ] Work on Q1Y2024 TDD!
* [x] Add to Jen's email template for Enrollments launch.
    * [ ] Figure out how much we can reduce our pod count.
        * 8 in Enrollment Service.
    * [ ] Figure out how much money that saves.
* [x] Write explainer/primer for international and share it with them.
* [x] Finish up unit + IT test coverage work.
* [ ] Get initial PR out for property based tests.
* [x] Come up with appropriate way to celebrate mono decomp Enrollments work.
    * Scheduled 1.5hr lunch for Wednesday, September 5th.
* [ ] Update Roadmap doc.
* [x] Schedule chat with Uttama about spanner and DB.
* [x] Schedule Enrollments V2 mono decomp retro
* [x] Round up notes from meeting with David Bowen on hand off and share w/ Jen, Veenit and Gowtham.

### 08-18-2023

* [x] Work on Q1Y2024 TDD!
* [x] Figure out how much we can reduce our pod count.
    * 2 in Enrollment Service.
    * _ in PES.
    * _ in TUGE.
    * _ in EXGE.
    * _ in EFGE.
* [ ] Figure out how much money that saves.
* [x] Meet with Uttama about Spanner. Do we want to use it in Enrollments consolidation this quarter?
    * https://docs.google.com/document/d/1Rb933m8NdFhWhR2sOsmgrFDtCpo7duS1Cu5h44zsu04/edit
* [ ] Update Roadmap doc.
* [ ] Get initial PR out for property based tests.
* [ ] Run query Yash mentioned checking that deactivations are happening.

### 08-21-2023

* SI-10139
    * AMS was NOT publishing on deactivation or registration to `usermanagement-user-last-active-events`.
    * Frustrating miss.
    * I see two paths forward.
        1. Update usermanagement-user-last-active-events to get published to during registration and deactivation.
        2. Update the thrift that gets published to the other two topics to contain all the information we need for Enrollment Eligibility and then have us (FTS) create two new consumers for those topics as well.
* [x] Write prep doc for Gowtham on what he missed.
* [ ] Work on Q1Y2024 TDD!
* [ ] Update Roadmap doc.

### 08-22-2023

* [x] FTS-2320 Add support for multiple consumers to Enrollment Service.
* [ ] Work on Q1Y2024 TDD!
* [ ] Update Roadmap doc.

### 08-23-2023

* [ ] Work on Q1Y2024 TDD!
* [ ] Update Roadmap doc.
* [x] Figure out next steps for Mono Decomp.

### 08-29-2023

* [ ] Work on Q1Y2024 TDD!
* [ ] Update Roadmap doc.

I need to figure out how to initialize the mini plugins.

### 08-30-2023

* [ ] Work on Q1Y2024 TDD!
* [ ] Update Roadmap doc.

## September 2023

### 09-01-2023

From Stephen on talking about typeclass organization:

> Okay so there are two ways, the fast and dirty and the good one
> The former is one big shared instances object across all typeclasses (bad, but easy to understand) 
> Better is every type class has it's own folder under the typeclasses folder, and there is an instances trait for each type class (in its own file), and the base instances object extends all the instances traits for each typeclass 
> Then it's one import but updates are localized and easy to see where they are and why

### 09-05-2023

* [ ] Figure out path forward with TDD!
* [x] Land and deploy PR around Event Type!
* [ ] Read next chapter of Designing Data Intensive Applications!

### 09-06-2023

* [x] Figure out path forward with TDD!

### 09-07-2023

* [x] Figure out path forward with TDD!
* [x] Deploy Enrollment Service.
* [x] Foster pushing forward the Enrollments mono decomp work.

### 09-08-2023

* [x] Present on TDD path forward.
* [x] MAKE A DECISION ON BEST PATH!!!
    * LEXIS NEXIS PATH
* [x] Update pagerduty TUGDD page.

### 09-11-2023

* [x] Focus on on call asks.
    * [x] Figure out this TUGI page.
    * [x] Run targeted trueup for EFGE friday.
    * [x] Look into issue Gowtham tagged you in.
* [ ] Write up TDD for next steps focusing on LexisNexis.

PES

* Circle configs loaded at start.
* Don't `Await.result` in main or anywhere.
* Update deprecations.

* Set up Enrollments sync.  Put it on Mondays.
* Restart the GANTT.
* Set up a private Slack for Enrollments.
    * Yash, Gowtham, Danbi, Rohit.
* Run retro early October.

### 09-12-2023

* [x] Write initial tickets.
* [ ] Write up TDD for next steps focusing on LexisNexis.
* [ ] PUP

https://jira.creditkarma.com/browse/FTS-2336
https://jira.creditkarma.com/browse/FTS-2337
https://jira.creditkarma.com/browse/FTS-2338
https://jira.creditkarma.com/browse/FTS-2339
https://jira.creditkarma.com/browse/FTS-2340
https://jira.creditkarma.com/browse/FTS-2341
https://jira.creditkarma.com/browse/FTS-2342

### 09-13-2023

* [ ] Revisit/revamp rollout plan.
* [ ] Write up TDD for next steps focusing on LexisNexis.
* [ ] PUP

Did a lot with refined types.

### 09-14-2023

* [ ] Revisit/revamp rollout plan.
* [ ] Write up TDD for next steps focusing on LexisNexis.
* [ ] PUP

Inactive & Unenrolled

### 09-18-2023

* [x] Confirm with AMS folks order for deactivation is correctly.
* [x] Fix DQMs in rollout sheet.
* [x] Re-run DQMs and get new numbers.
* [x] Get Anu, Yash, & Gowtham to agree on roll out metrics and what is acceptable for "keep it toggled! Success!" vs "We need to roll back!"

* Moved DQMs for mono decomp rollout to its own [spreadsheet](https://docs.google.com/spreadsheets/d/1AtImHuUVbt1s_eOjnxhft-1EvtYKOMbQ9TfoeSDHOKA/edit#gid=0)
* Many still have very warped numbers.  We need to figure out why.
    * `EXP -> Users unenrolled and they should be enrolled in CKI` appears to be accurate.  Do we really have 1.25M?
* Filled out a lot more of the TDD.

### 09-19-2023

* [ ] FTS-2350: Fix DQMs in rollout sheet.
* [ ] FTS-2180: Continue work on TDD.
* [x] Review all open PRs.

### 09-20-2023

* [x] Send email to Equifax asking what's up w/ the 500 errors.
* [ ] FTS-2350: Fix DQMs in rollout sheet.
* [ ] FTS-2180: Continue work on TDD.

### 09-27-2023

* [x] Catch up on everything.
* [x] Respond to Equifax on issues w/ 500 Internal Server error.  Sounds like they are incorrectly returning a 500 rather than a more informative code.  Said it started happening on 9/20. 
* [x] FTS-2350: Fix DQMs in rollout sheet.

DwNumericId [censored]

### 09-28-2023

* [ ] FTS-2350: Fix DQMs in rollout sheet.

#### Investigation into why we are seeing so many users unenrolled that should be enrolled in things.

Example user: DwNumericId [censored]

Here's the snapshot that gets sent over of this user:

```scala
  // For users DwNumericId = [censored]
  val x = Some(
    EnrollmentCriteriaSnapshot(
      lastTermsOfServiceAccepted = Some(IntCriteria(2, Some(CriteriaMetadata(Some(DateTime("2015-01-19T17:36:45+0000")), Some(Mono))))),
      optInCreditAlerts = Some(BooleanCriteria(true, Some(CriteriaMetadata(None, Some(Mono))))),
      optInNotification = Some(BooleanCriteria(true, Some(CriteriaMetadata(None, Some(Mono))))),
      accountState = Some(AccountState(Active, Some(CriteriaMetadata(Some(DateTime("2015-01-19T17:37:27+0000")), Some(Mono))))),
      passedOutOfWallet = Some(BooleanCriteria(true, Some(CriteriaMetadata(Some(DateTime("2015-01-19T17:37:27+0000")), Some(Mono))))),
      creditLockEligible = Some(BooleanCriteria(false, Some(CriteriaMetadata(None, Some(Mono))))),
      lastActiveDate = Some(DateCriteria("2016-10-27", Some(CriteriaMetadata(Some(DateTime("2016-10-27T20:57:12+0000")), Some(Mono))))),
      enrollmentBehaviorSignal = None,
    )
  )
```

Here's where mono gets the `lastActiveDate` timestamp: https://code.corp.creditkarma.com/ck-private/ck_ck/blob/70edaf794699ee41673aff373f58fb1ba2b3f8d3/src/CreditKarma/Eligibility/EnrollmentClient.php#L444-L458

The above user's `lastActiveDate` is incorrect.  When the user is looked up in `login_count` in BQ their `lastLoginTs`, after being parsed by `timestamp_seconds` is 2023-03-18 18:18:20 UTC.  Whereas when we look them up in the `users` table their `autoTs` is 2016-06-18 08:38:10 UTC which 

## October 2023

### 10-03-2023

* FTS-2350 – Pushed further on this.  Got some follow up from Ashok.  You can read it here but duplicating my findings below as well. https://jira.creditkarma.com/browse/DBA-4562?focusedCommentId=2298420&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-2298420

> So we have a problem. Lets focus on one user for now to simplify things. DwNumericId [censored].
> 
> In BigQuery we have this result:
> 
> ```
> SELECT *, timestamp_seconds(lastLoginTs) AS parsedLastLoginTs FROM `prod-ck-abl-data-53.mysql.login_count` WHERE numericId = [censored];
> 
> numericId           lastLoginTs autoTs     parsedLastLoginTs
> [censored] 1679163500  1693421232 2023-03-18 18:18:20.000000 UTC
> ```
> 
> From the sharded login_count table you provided above we have:
> 
> ```
> [censored]   2016-10-27 13:57:12 
> ```
> 
> From the initial mono table results you provided (I assume non-sharded)
> 
> ```
> login_count
> -----------
> 
> select a.dwNumericId, FROM_UNIXTIME(b.lastLoginDate) from dw_numeric_id a join login_count b where a.ckNumericId = b.numericId and a.dwNumericId in ([censored]);
> 
> +---------------------+--------------------------------+
> | dwNumericId         | FROM_UNIXTIME(b.lastLoginDate) |
> +---------------------+--------------------------------+
> | [censored] | 2016-04-14 00:00:00            | 
> 
> personal
> --------
> select a.dwNumericId, b.autoTs, b.oowValidated from dw_numeric_id a join personal b where a.ckNumericId = b.numericId and a.dwNumericId in ([censored]);
> 
> +---------------------+---------------------+--------------+
> | dwNumericId         | autoTs              | oowValidated |
> +---------------------+---------------------+--------------+
> | [censored] | 2023-03-18 11:17:10 |   1421689047 |
> 
> 
> users 
> ------
> 
> select a.dwNumericId, b.autoTs, b.deactivation from dw_numeric_id a join users b where a.ckNumericId = b.numericId and a.dwNumericId in ([censored]);
> 
> +---------------------+---------------------+--------------+
> | dwNumericId         | autoTs              | deactivation |
> +---------------------+---------------------+--------------+
> | [censored] | 2016-06-18 01:38:10 |            0 |
> ```
> 
> I know that's a huge wall of text so let me recap:
> 
> * We, FTS, who manage enrollments, are seeing a lastLogin timestamp for [censored] of "2016-10-27T20:57:12+0000".
> * BQ tells me their last login was 2023-03-18 18:18:20.000000 UTC.
> * The sharded mono DB says their last login as 2016-10-27 13:57:12 . (THIS IS THE DATE WE RECEIVE!)
> * The non-sharded DB says their last login was 2016-04-14 00:00:00 .
> 
> So we have three different dates. So now we have to figure out, what's going on. 
> 
> Something is likely broken/wrong with the ETLing of this info to BQ. If so we need to fix it.
> Why is the sharded and non-sharded DBs showing different dates?
> Where does this 2023-03-28 date come from? I don't see it anywhere in the raw data from the mono queries Ashok Jivani provided.

### 10-04-2023

* After chatting w/ Daniel Liu he confirmed that they are ETLing the sharded `login_count` table.  This doesn't explain why the info in BQ and the sharded DB are different.

### 10-05-2023

* Catch up on emails & slack post conference.
* Assist Danbi w/ polling TrueUp PR.  We need to land this soon.  Pairing w/ her and Logan later.
* Update remaining DQMs for Enrollment Service to account for findings from yesterday on `login_count` versus `login_count_old` table and filtering out fake users.

### 10-06-2023

* Continue updating remaining DQMs for Enrollment Service to account for findings from yesterday on `login_count` versus `login_count_old` table and filtering out fake users.
* Clean up post-true-up PR.

### 10-09-2023

* Continue updating remaining DQMs for Enrollment Service to account for findings from yesterday on `login_count` versus `login_count_old` table and filtering out fake users.
* Prep for Q2 2024 OKR meeting.
* Prep for Enrollments V2 meeting.

### 10-10-2023

* ✓ Add a view of the remaining tickets between now and fully using GCP + mono decomp to meeting notes.
* Create/update GANNT chart for remaining work on GCP true up and enrollments mono decomp.
* Figure out why old use didn't get new entries when TrueUp runs.
    * Is it possible for a user to NOT get picked up by TrueUp?
* ✓ One pager for next quarter.
* ✓ PES to FTS hand off shepherding.

### 10-11-2023

* Create/update GANNT chart for remaining work on GCP true up and enrollments mono decomp.
* Figure out why old use didn't get new entries when TrueUp runs.
    * Is it possible for a user to NOT get picked up by TrueUp?
* Respond TDD feedback.  Ensure milestones are clear and understanding what work can be parallelized for Q2 2024.

### 10-12-2023

* OKR planning all day.  Mostly focused on Enrollments V2 work for next quarter.

### 10-13-2023

* ✓ Create/update GANNT chart for remaining work on GCP true up and enrollments mono decomp.
* Figure out why old use didn't get new entries when TrueUp runs.
    * Is it possible for a user to NOT get picked up by TrueUp?
* ✓ Re-run all queries to get new baseline metrics for DQMs.
* ✓ Run DwNumericIds of out-of-compliance users through targeted-true-up.
    * Track their flow, if they are corrected (marked as unenrolled) then flag in chat and continue investigation.
* ✓ Update EFGE & TUGE to use `main` instead of `develop`.

### 10-16-2023

* ✓ Follow-up on DwNumericIds ran through targeted true-up Friday.
* ✓ Update GANTT chart w/ latest info.
* Work on proposal for batch LexisNexis in Enrollments V2 flow.

Info from Andrew Lei on how the login_count and `lastLoginTs` info in mono.

> The mono `login_count` mysql table is no longer being updated since May 31st, 2023 for native logins, the BQ view for `login_count` is now sourced from multiple tables to get the last login time mostly used for email campaigns, etc
> that function you linked in mono is no longer correct and would return stale data, if you need the correct timestamp there, would need to update this to either call that BQ view somehow 
> @amber.zhang
>  would have more context on those source tables, some alternate data sources through BE thrift:
>     * AMS - member's last full login timestamp and not resume session upgrade token through native biometrics login
>     * CRPO - member's last report pull job time

### 10-17-2023

* Work on proposal for batch LexisNexis in Enrollments V2 flow.
* ✓ Figure out how to run 150K users through TrueUp.
    * Gowtham took this on.
* ✓ Follow up on this logging numericID SI.  Fill out all the paperwork.
* ✓ Assist in getting TrueUp Profile deployed.

### 10-18-2023

* ✓ Work on proposal for batch LexisNexis in Enrollments V2 flow.
* ✓ Assist Danbi w/ any AMS bulk work.
* ✓ Figure out next steps w/ DQM.
    * Figure out how to run 150K users through TrueUp.
        * Gowtham took this on.
    * What do we do about finding out that the `login_count` table for mono is no longer being updated as of May 31, 2023?
    * We believe we need to fix the churn cut issue w/ TrueUp and then re-run it.  This will hopefully bring down TU EnhancedAlerts issues.
* ✓ Deploy code improvements-refactors to TrueUp profile.

### 10-19-2023

* ✓ Work on proposal for batch LexisNexis in Enrollments V2 flow.
    * Out for review w/ the team.
* ✓ Assist Danbi w/ any AMS bulk work.
    * She's good to go.  PR out.
* ✓ Figure out next steps w/ DQM.
    * Figure out how to run 150K users through TrueUp.
        * Gowtham took this on.
    * What do we do about finding out that the `login_count` table for mono is no longer being updated as of May 31, 2023?
    * We believe we need to fix the churn cut issue w/ TrueUp and then re-run it.  This will hopefully bring down TU EnhancedAlerts issues.
* ✓ Take over Gowtham's CEL PR to upgrade Talon.

```
[info] CeGraphConsumerTaskSpec:
[info] - should not start streaming when started until in Ready state *** FAILED ***
[info]   org.mockito.exceptions.verification.WantedButNotInvoked: Wanted but not invoked:
[info] messageHandler.handleMessage(Foo(abcd));
[info] -> at com.creditkarma.creditecosystem.util.streaming.CeGraphConsumerTaskSpec.$anonfun$new$4(CeGraphConsumerTaskSpec.scala:38)
[info] Actually, there were zero interactions with this mock.
```

### 10-20-2023

* Work on proposal for batch LexisNexis in Enrollments V2 flow.
    * Out for review w/ the team.
    * ✓ Add missing daily unenroll piece.  Get Lightspeed to confirm all flows are covered.  Solon agreed to do this today.
* Assist Danbi w/ any AMS bulk work.
    * Help w/ test.
    * Try to get deployed today.
* Support Gowtham with TrueUp fix on mono.
* I don't have bandwidth to support the CEL talon upgrade PR that Gowtham has open that I was assisting with.

### 10-26-2023

* Catch up on what has happened in the 3 days out.
* Work on proposal for batch LexisNexis in Enrollments V2 flow.
    * Out for review w/ the team.
    * Clean up proposal flow after getting Solon's feedback Friday.
* Assist Danbi w/ any AMS bulk work.
    * Assist w/ how-to-test.
* Support Gowtham with TrueUp fix on mono.
* Come up with plan on how to flip the switch on mono decomp.
    * What DQM issues do we want to resolve, if any, before flipping the switch?
    * What _exactly_ are we planning to see fixed by Gowtham's TrueUp fix/addition in mono?
    * Find out what's going on with biometric login and AMS.  Originally was said not needed for mono decomp but that might not be the case.  Gowtham got updates.
        * Equifax only 145K users.
        * 46M 
        * Not a blocker for AMS ramp.
        * We do need to fix biometric logins in general though.  If they aren't registering a new lastLoginT then we are going to unenroll people that should be enrolled because many of our users only use the apps.

### 10-27-2023

* Assist Danbi w/ any AMS bulk work.
    * Chat w/ Gowtham on what tests he'd like to see.
    * See if there's a way to do IT tests with Google Cloud Storage.
* Update proposal w/ Solon's latest info.  Re-flag to Yash,  Anu, & Gowtham for review.
* Come up with plan on how to flip the switch on mono decomp.
    * Write up plan and share w/ Gowtham, Jen, & Yash.
        * Update DQMs published to #enrollment-dqms.
        * Define alerts.  When should we get paged? What level of "flux" are we cool with?
* Come up with plan for biometric login.  Not blocking the mono decomp.  But just a nasty issue we need to find a solution for.

#### Update on Enrollments work

Currently there are two tracks of work we are progressing on: Decommissioning mono TrueUp in favor of the new GCP TrueUp and decommissioning mono as the source for enrollment events in favor of using AMS.

_*GCP TrueUp*_:

*Achieved*

* Got TrueUp Profile out and in prod can now talk to AMS to get latest user info for TrueUp.
* Got TrueUp profile publishing to the PubSub topic in prod.
* Got the fixes in needed for the AMS Bulk Endpoint to support the aforemntioned TrueUp work.
* Tested the CloudFunction.
    * Rohit handled many VPC violation issues and worked with Cloud Security on this.  Eventually all issues were resolved and approval by them.
    * Ran into a timeout error and a memory limit error.  Increased limits.
    * Waiting on cloud team to confirm keys in hvault as well as platsec to ask them to remove start/end language and \n characters from the keys.

*Planned for next week*

* Fixing the existing issues with TrueUp profile to PubSub to kicking off the CloudFunction.

*Risks*

* Issues with timeout seem to be the biggest unknown and blocker.
* Working with Cloud Security, Platform Security, etc., all together to get this working successfully.

*Mitigation*

* Working closely with those teams to ensure we have a smooth processes and that we aren't blocked by security issues or access issues again.

_*Mono Decomp*_:

*Achieved*

(Jesse was on PTO for 3 days.)

* Investigated biometric login.  Not a blocker as this is an existing issue with mono and will continue to be once we switch to AMS.
* Dug in further on the DQMs and determined we are comfortable with the baseline that we have.
* Met with Jen to discuss the plan moving forward.

*Planned for next week*

* Update #enrollments-dqm to use our new queries.
* Set up alerts to page if those DQMs cross a threshold (to be decided upon as a group, but I have suggestions)
* Confirm w/ Krys & Jen that we have the go-ahead.
* Flip the switch and monitor.
* Work with Krys & Jen to add #bureau-data-compliance-alerts for credit alerts.  (I'll be doing the coding work, but requires some legal coordination.)
* Stretch goal: Flip the switch to use AMS rather than mono for enrollment events data.

*Risks*

* Incorrect DQM queries.
* Pages set up incorrectly.

*Mitigation*

* Verify that the DQM queries are indeed correct via peer review.
* Work together to agree on the correct levels for the pages that will signify that there's a problem with the pipeline after switching to AMS.

### 10-30-2023

* [ ] Update Enrollments DQMs to use new queries.
    * [x] Equifax
    * [ ] Experian
    * [ ] Transunion
    * [ ] LexisNexis
* [x] Update GANTT chart for Enrollments.
* [x] Raise concerns about on-call coverage.
* [ ] Investigate & remedy if possible the various on call pages.  Specifically the TUGDD error rate 
* [x] Get moving on migrating CloudFunction from Gen 1 to Gen 2.
    * We need to talk to the Cloud team. SaikrishnaReddy Lenkala is likely the person to talk to.
    * Meeting scheduled.
    * Platform doesn't support Gen 2 yet and won't anytime soon.  We need an alternative plan.  To be discussed at 3pm.
    * Meeting punted to tomorrow.  Still a chance we can use Gen 2.
* [ ] Write ticket for TUGDD high error rate issue.
* [ ] Write ticket for EXGE standard deviation page that happens w/ the end-of-month giant Experian recon.
* [ ] Can we make it visible in some way (not an alert) on when the full population recon is being processed versus the daily?
* [x] Share this very .plan out w/ the team.
* [ ] Migrate 2020-2022 .plan to this repo.
* [x] Update Enrollment Service to sbt 1.9.7 https://ckcorp.slack.com/archives/C06JSF50E/p1698683992027149
* [x] Update Enrollment Service to Talon 2.9.6
* [ ] Update Enrollment service to use non-deprecated IntegrationTest.
* [x] Write docs for how to use the CEL logger.

```
/Users/jesse.atkinson/Developer/ce_enrollment-service/build.sbt:105: warning: value IntegrationTest in trait LibraryManagementSyntax is deprecated (since 1.9.0): Create a separate subproject for testing instead
lazy val ItTest = IntegrationTest.extend(Test)
                  ^
/Users/jesse.atkinson/Developer/ce_enrollment-service/build.sbt:108: warning: lazy value itSettings in object Defaults is deprecated (since 1.9.0): Create a separate subproject instead of using IntegrationTest and in addition avoid using itSettings
    Defaults.itSettings ++
             ^
```

### 10-31-2023

* [x] Figure out next priority of work.  Logging audit may cause all other work to be blocked.  Discuss w/ Jen & Gowtham and then move forward.
* [x] Solon, John N, Rodrigo, & Danbi to audit.  Come up w/ a plan-of-attack for this week.
* [x] Investigate & remedy if possible the various on call pages.  Specifically the TUGDD error rate.  Gowtham started a thread on this.
* [x] Write ticket for TUGDD high error rate issue.
    * https://jira.creditkarma.com/browse/FTS-2392
* [x] Write ticket for EXGE standard deviation page that happens w/ the end-of-month giant Experian recon.
    * https://jira.creditkarma.com/browse/FTS-2393
* [x] Continue work on figuring out next steps with GCP TrueUp.  Can we use Gen 2?  To be discussed w/ Sathish further.
    * We are pushing for Gen 2 support.  Yash & Gowtham driving.
* [ ] Update Enrollments DQMs to use new queries.
    * [ ] Equifax
    * [ ] Experian
    * [ ] Transunion
    * [ ] LexisNexis
    * Flat out just not gonna do this this week.
* [ ] Update Enrollment service to use non-deprecated IntegrationTest.
* [ ] Migrate 2020-2022 .plan to this repo.
* [x] Fix `ep.fish` function to work with new `.plan` format.

## November 2023

### 11-01-2023

* [x] Finish up auditing assigned logger & logback stuff.
* [x] Get cross team folks on board w/ the plan for the week.
* [x] Come up w/ step-by-step plan for how to audit BQ.
    * Rigo did this!  Victory.
* [ ] Come up w/ step-by-step plan for how to audit Splunk logs.
* [x] Update Enrollment service to use non-deprecated IntegrationTest.
* [ ] Migrate 2020-2022 .plan to this repo.

### 11-02-2023

* [x] Audit the BQ tables assigned to you.
    * Make sure to communicate out at EOD where we're at.
* [x] Finish up Enrollment service integration test fix.
* [ ] Come up w/ step-by-step plan for how to audit Splunk logs.
* [ ] Migrate 2020-2022 .plan to this repo.
* [x] Follow up w/ Sathish on Gen 2 CloudFunction support.
    * Yash & Gowtham driving this but keep tabs on it.

### 11-03-2023

* [x] Come up w/ step-by-step plan for how to audit Splunk logs.
    * Made progress but still need to finish up the query.
* [x] Schedule follow ups and planning for security OKR for next week.
* [ ] Migrate 2020-2022 .plan to this repo.

### 11-06-2023

* [x] Get BQ audit sheet consistent.
* [x] Come up w/ step-by-step plan for how to audit Splunk logs.
    * Decide which stuff you can match w/ RegEx and which you can't.
    * Actually write the query.
* [ ] Begin planning out the OKR.
* [ ] Migrate 2020-2022 .plan to this repo.

### 11-07-2023

* [ ] Finish up Splunk audit.
    * Pushing back on this.  I don't think it's worth the time.
* [x] Begin planning out the OKR.
    * Start a doc.  Go through the three pillars of it. 
* [ ] Migrate 2020-2022 .plan to this repo.

### 11-08-2023

* [x] Finish up Splunk audit.
    * My repos are done.  Still a few more to go from others.
* [x] Begin planning out the OKR.
    * Start a doc.  Go through the three pillars of it. 
    * Respond to Gowtham's feedback.
* [x] Write up KarmaConvo stuff.
* [x] Figure out next steps w/ Enrollments issues regarding TrueUp.
    * See team meeting notes.
* [ ] Migrate 2020-2022 .plan to this repo.

### 11-09-2023

* [x] Support Splunk audit if needed.  We really should knock this out ASAP.  Holler if it's taking more than an hour.
* [x] Continue planning out the security OKR.
    * I've got a doc going on this.
* [x] If there's time, resurrect the scalacheck branch I have and see about getting the first property based tests into Enrollment Service again.

### 11-10-2023

* [x] Wrap up Splunk audit.
    * FTS is done.  Bark at Core & LS to finish.
    * Sync w/ Jen on if this satisfies the audit.
* [x] Continue planning out the security OKR.
    * Respond to Gowtham's feedback.
    * Sync w/ Gowthamn & Jen on next steps.
* [x] Open PR for property based testing in Enrollment Service.

* Scala By The Bay

### 11-15-2023

* Scala By The Bay

### 11-16-2023

* [x] Confirm w/ Jen & Gowtham on your plans for the Security OKR.
    * Get their buy-in.
    * Establish next steps.
* [ ] Teach team about property-based testing PR.

### 11-17-2023

Yesterday was a whirlwind.

* [ ] Catch John up on Security OKR.
* [x] Begin on SI response work.

### 11-20-2023

* [ ] Catch John up on Security OKR.
* [x] Continue on FTS-2424 to support closing out this SI.
    * Need to write test.
* [ ] Start on FTS-2421 (taking from John) DQM work.

### 11-21-2023

* [x] Catch John up on Security OKR.
* [x] Continue on FTS-2424 to support closing out this SI.
    * Finished up test writing.
* [x] Start on FTS-2421 (taking from John) DQM work.

## December 2023

### 12-05-2023

* [ ] Fix AMS bulk numeric ID mapping client issue.
* [x] Fix issue with DwNumericIds that don't work in test env.
* [ ] Test in test env.
* [ ] Adjust the toggles to support mono RPC organic traffic but new GCS TrueUp.
* [ ] Add tests.

Last week we discussed the current solution and realized we can cut a corner to resolve this SI quicker and with less risk by continuing to consume organic traffic from mono but set last login to the current timestamp, rather than switch over to AMS for organic traffic.  This will require some minor/easy-to-do code changes regarding the Falcon toggles which i plan on doing today.  So we'll still switch over to new GCS TrueUp but stay on organic traffic rather than consume from AMS (which is the ultimate goal).

Why this change/short cut?

* Less immediate risk for solving the SI.  While we still want to move over to AMS ASAP we can do this in a more controlled manner after SI resolution.
* For organic traffic timestamp barely matters because if a user has just logged in their tmestamp will be sometime incredibly recent.  So setting it to `now()` is almost zero risk for organic traffic.

Next steps:

* Testing in test env today.  We are, we believe, code complete pending any issues found in testing.
* Generating the actual file(s) we'll need for TrueUp in production.
* Deploying the fix(es) to production.
* Uploading said files to production bucket.
* Monitor the true up.

### 12-06-2023

Entirely focused on SI-10590.

* [ ] Fix AMS bulk numeric ID mapping client issue.
* [x] Fix issue with DwNumericIds that don't work in test env.
* [ ] Test in test env.
* [ ] Adjust the toggles to support mono RPC organic traffic but new GCS TrueUp.
* [ ] Add tests.
* [ ] Add support for timestamp.now in RPC client.

1-on-1 w/ Rima & Esha notes

* Stress and overwork.
* Frustration with security OKR and enrollments work being paused.
* Any feedback for me? Anything she'd like me to focus on?
    * Delegate managerial stuff like requesting help on SIs or cross team stuff to management.

### 12-07-2023

Entirely focused on SI-10590.

* [x] Fix AMS bulk numeric ID mapping client issue.
    * ID'd issue.  Isaiah is working on it.
* [x] Fix issue with DwNumericIds that don't work in test env.
* [x] Test in test env.
* [ ] Adjust the toggles to support mono RPC organic traffic but new GCS TrueUp.
* [ ] Add tests.
* [ ] Add support for timestamp.now in RPC client.

# 2024

## January 2024

### 01-16-2024

* [x] Catch up on everything.
* [x] Decide on what next steps are.

Putting here for future me.  If your computer battery dies and you see weird cert issues and it's upset about the date time being extremely off, it's because the mac is attempting to get the datetime from the internal chip (that's what IT told me).  This is a weird but and can be fixed by running:

```
sudo rm /etc/ntp.conf
sudo rm /var/db/timed/com.apple.timed.plist
```

### 01-17-2024

* [x] Assist Danbi w/ Enrollments/TrueUp work.
* [ ] Catch up on any other outstanding Enrollments work from the SI-10590.
    * How is this related to the new SI-10899?
    * Around 4.4M users are not in the bureau-specific enrollment tables but were in the mono tables.  It's different for each bureau.
    * Transunion & Experian, majority of users are fixed after running the trueup Equifax is still wonky.  3.6M still not fixed.  But not the "truth".
    * 3.6M users in AMS are marked as passed out of wallet that are NOT marked as passed out of wallet in the mono (personal) table.
    * No one on AMS is even aware of this.  Anu to gather data on this from Splunk & BQ.
    * In EFGE, it doesn't even write to the DB if the user isn't eligible AND they do not have a Equifax ID.
    * We need to check data parity between AMS & mono for passed out of wallet.
    * We need to figure out EFGE flow.  Do we not want to write the users to the DB if they are not eligible and do not have an Equifax ID?
    * We get 404 subject not found from Equifax for users who have mailing address mismatched.  Approximately 400K users.
* [ ] Start RCA for SI-10590.

### 01-18-2024

* [x] Catch up w/ Anu on any remaining issues w/ mono decomp-ing Enrollments.
* [x] Message UM team and ensure we are on the same page.
* [x] Check in with Danbi and support her on optimizing the true up process.  Support, try not to code, guide.
* [x] Start RCA for SI-10590.

### 01-19-2024

* [x] Continue on or finish RCA for SI-10590.
* [x] Get Danbi over the finish line.
* [x] Dig into outstanding enrollments work.

### 01-22-2024

* [x] Finish RCA for SI-10590.
* [x] Ensure Danbi is unblocked.
* [x] Flesh out risks for organic mono decomp.
* [ ] Dig into compliance alerts for Enrollments: https://jira.creditkarma.com/browse/FTS-2473
* [x] Assign Danbi to do a 1 pager for if we need to use an alternative to Cloud Function for TrueUp.

### 01-23-2024

* [x] Assist Danbi w/ any remaining TrueUp work.
* [x] Wrap up risks for organic mono decomp for enrollments.
* [ ] Dig into compliance alerts for Enrollments: https://jira.creditkarma.com/browse/FTS-2473
* [x] Look into how to run churn cut TrueUp.
* [x] Keep up on SI-10962.
* [ ] Respond to Sunhil's email.

### 01-24-2024

* [x] Pair w/ Danbi to get this TrueUp work done!
* [x] Follow up on questions/concerns/risks around using AMS data for Enrollments w/ UM team.
* [x] Respond to Sunhil's email.
* [ ] Dig into compliance alerts for Enrollments: https://jira.creditkarma.com/browse/FTS-2473
* [x] Investigate PES late-night pages.
* [ ] Assign out on-call items.

### 01-25-2024

* [x] Figure out TUGE add/drop recon issue and fix.
* [x] Email TU and see why we didn't receive any alerts for Canada.
* [x] Update TUGE add/drop recon page to business hours only.
* [x] Remove one of the "Signal lost for CA TU CAS" alerts as there is two.
* [x] Prep for meeting w/ Sunil and co. tomorrow.
* [x] Support LexisNexis churncut task.
* [x] Follow up on questions/concerns/risks around using AMS data for Enrollments w/ UM team.
* [x] Prep for tomorrow's retro on SI-10590.
* [x] Pick up Danbi's TrueUp work.
* [ ] Assign out on-call items &/or make tickets for them.
* [ ] Dig into compliance alerts for Enrollments: https://jira.creditkarma.com/browse/FTS-2473

```s
SELECT (sum(`ck.service.server.custom.AddRecordsGenerated`) + sum(`ck.service.server.custom.DropRecordsGenerated`)) FROM Metric WHERE `service.name` LIKE 'transunion-gateway-enrollment%'  since '2024-01-24 02:38:00-0800' UNTIL '2024-01-24 09:33:00-0800'
```

The requested CKIDs and timestamps. We have checked for these 5 members and we do not have any MI pulls for these on our end.

CKID: xxxxxx954, timestamp: 2024-01-12T18:00:37.629-08:00
CKID: xxxxxx692, timestamp: 2024-01-14T01:57:27.515-08:00
CKID: xxxxxx229, timestamp: 2024-01-13T11:32:47.318-08:00
CKID: xxxxxx660, timestamp: 2024-01-12T17:50:44.549-08:00
CKID: xxxxxx992, timestamp: 2024-01-12T02:48:55.371-08:00

### 01-26-2024

* [x] Prep for meeting w/ Sunil and co.
    * Confirm if the users who got 404s that we have had other MI pulls. (They do not!)
* [x] Come up w/ next steps for AMS data quality chase.
* [x] Continue on Danbi's TrueUp work.
* [x] Create ticket for investigating how often TU & EF send us the recon file late or not at all. https://jira.creditkarma.com/browse/FTS-2506
* [ ] Assign out on-call items &/or make tickets for them.
* [ ] Dig into compliance alerts for Enrollments: https://jira.creditkarma.com/browse/FTS-2473
* TODO for Monday: Send meeting notes from Friday meeting to Sunil and co. along with next steps.

### 01-29-2024

#### Weekly Priorities

* [ ] Update on call documentation where you found gaps during your on call.
* [ ] Finish first draft of AMS DQMs for validating that we can use their data for enrollments.
* [ ] Land and deploy TrueUp optimization work.  Need to test this as best we possibly can in test env.

#### Daily Priorities

* [x] Follow up on on call items.
    * [x] Figure out why Experian seems to send their recon late.
    * [x] Figure out this new template they asked for.  Is this the new norm?  If so get correct answers and put this all in the runbook.
    * [x] Look into EFX-USA: Reports with member status discrepancies DQM.
    * [x] Add info to runbook on what to do for high kafka lag in enrollment gateways.
* [x] Get reviews on True-Up work.  Particularly from UM team.  Work with Isaiah to decide on number of NumericIds we can send at once.
    * [ ] Create a testing plan for this work.
* [ ] Dig into compliance alerts for Enrollments: https://jira.creditkarma.com/browse/FTS-2473
* [ ] Summarize findings and next steps from meeting w/ Sunil and co. last week.
* [ ] If time allows open PR to ETL AMS tables. https://jira.creditkarma.com/browse/FTS-2502

### 01-30-2024

* [ ] Figure out this new template they asked for.  Is this the new norm?  If so get correct answers and put this all in the runbook.
* [x] Look into EFX-USA: Reports with member status discrepancies DQM.
* [x] Add info to runbook on what to do for high kafka lag in enrollment gateways.
* [ ] Get reviews on True-Up work.  Particularly from UM team.  Work with Isaiah to decide on number of NumericIds we can send at once.
* [ ] Create testing plan for TrueUp work.
* [ ] Dig into compliance alerts for Enrollments: https://jira.creditkarma.com/browse/FTS-2473
* [x] Summarize findings and next steps from meeting w/ Sunil and co. last week.
* [ ] If time allows open PR to ETL AMS tables. https://jira.creditkarma.com/browse/FTS-2502

### 01-31-2024

* [x] Follow up on figuring out this new template they asked for.  Is this the new norm?  If so get correct answers and put this all in the runbook.
* [ ] Assist Rigo in any way with the churncut TrueUp prep.
* [ ] Get reviews on True-Up work.
* [ ] Create testing plan for TrueUp work.
* [ ] ETL AMS tables. https://jira.creditkarma.com/browse/FTS-2502

- - -

vim: syntax=markdown filetype=markdown shiftwidth=4
