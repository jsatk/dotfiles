# alias ------------------------------------------------------------------- {{{

[alias]
	s = status --short

	# Pretty git log
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --

	# Undo a `git push`
	undopush = push --force origin HEAD^:master

	# Log Me
	logme = log --color --name-only --decorate=full --author="Jesse"

	# Get Incoming Changes
	incoming = log ..@{u}

	# Get Outgoing Changes
	outgoing = log @{u}..

	# list branch dates
	branchdate = !git for-each-ref --sort='-authordate' --format='%(refname)%09%(authordate)' refs/heads | sed -e 's-refs/heads/--'

	# Delete all branches that have already been merged into the current
	# branch.
	deletemerged = "!git branch --merged | grep  -v '\\*\\|master\\|develop' | xargs -n 1 git branch -d"

	# List all aliases.
	# Stolen from here:
	# https://twitter.com/TrevorBramble/status/774292970681937920
	aliases = "!git config -l | grep ^alias | cut -c 7- | sort"

	# Reset previous commit, but keep all the associated changes. Useful for
	# avoiding nasty git merge commits.
	damnit = reset --soft HEAD^

	# Destroy all local changes and reset to HEAD.
	fuckit = reset --hard HEAD

	# A slightly-less-destructive and risky git push --force
	please = push --force-with-lease

	# Prints the SHA of the head commit.  I find myself needing to do this
	# often enough for hot-fixes where I cherry-pick a commit over.  I'm
	# making an alias for this because I can never remember the `%H` bit.
	#
	# The most practical application of this looks something like the
	# following (which assumes a macOS environment).
	#
	# $ git headsha | pbcopy
	# $ git checkout hot-fix-branch
	# $ git cherry-pick <PASTE>
	#
	# And yes – if you're clever – you can pipe to `xargs` to cherry-pick
	# this all in one line.
	headsha = !git log -1 --pretty=format:'%H'

	# Show all changes that are currently staged for commit.
	staged = diff --cached

	# Append staged changes to head commit.
	# Great for when you forget to add something.
	append = commit --amend --no-edit

# }}}
# apply ------------------------------------------------------------------- {{{

[apply]
	whitespace = fix

# }}}
# branch ------------------------------------------------------------------ {{{

[branch]
	autosetuprebase = always

# }}}
# colors ------------------------------------------------------------------ {{{

[color]
	ui = true

[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	frag = magenta bold
	meta = yellow
	new = green bold
	old = red bold
	commit = yellow bold
	whitespace = red reverse

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

# }}}
# commit ------------------------------------------------------------------ {{{

[commit]
	cleanup = scissors
	gpgsign = true

# }}}
# core -------------------------------------------------------------------- {{{

[core]
	attributesfile = ~/.gitattributes
	autocrlf = input
	ignorecase = false
	whitespace = fix,space-before-tab,tab-in-indent,trailing-space
	editor = vim
	pager = diff-so-fancy | less --tabs=4 -RFX
	excludesfile = ~/.gitignore

# }}}
# credential -------------------------------------------------------------- {{{

[credential]
	helper = osxkeychain

# }}}
# diff -------------------------------------------------------------------- {{{

[diff]
	algorithm = patience

# }}}
# github ------------------------------------------------------------------ {{{

[url "git@github.com:"]
	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"

[url "git://github.com/"]
	insteadOf = "github:"

[url "git@gist.github.com:"]
	insteadOf = "gst:"
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]
	insteadOf = "gist:"

# Any GitHub repo with my username should be checked out r/w by default
# http://rentzsch.tumblr.com/post/564806957/public-but-hackable-git-submodules
[url "git@github.com:jsatk/"]
	insteadOf = "git://github.com/jsatk/"

[user]
	email = jesse@jsatk.us
	name = Jesse Atkinson
	signingkey = "DC5AC6E4"

[hub]
	protocol = https

# }}}
# gpg --------------------------------------------------------------------- {{{

[gpg]
	program = gpg

# }}}
# grep -------------------------------------------------------------------- {{{

[grep]
	patternType = "fixed"

# }}}
# help -------------------------------------------------------------------- {{{

[help]
	autocorrect = 1

# }}}
# merge ------------------------------------------------------------------- {{{

[merge]
	log = true
	tool = vimdiff
	conflictstyle = diff3

# }}}
# pull -------------------------------------------------------------------- {{{

[pull]
	rebase = true

# }}}
# push -------------------------------------------------------------------- {{{

[push]
	default = tracking

# }}}
# rebase ------------------------------------------------------------------ {{{

[rebase]
	autoStash = true

# }}}
# rerere ------------------------------------------------------------------ {{{

[rerere]
	enabled = true

# }}}
# work stuff -------------------------------------------------------------- {{{

[kaclone]
	email = jesse@khanacademy.org

# }}}
# vim: textwidth=80:noexpandtab:shiftwidth=8
# vim: foldmethod=marker:foldmarker={{{,}}}:syntax=gitconfig
