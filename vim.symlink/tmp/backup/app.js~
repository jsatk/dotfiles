/* global dependencies */
var _ = require('underscore');
var $ = require('jquery');
var Backbone = require('backbone');
var Marionette = require('backbone.marionette');

/* local dependencies */
var AlertView = require('./common/alert');
var PermissionDenied = require('./common/permission-denied-view');
var AppChannel = require('./app-channel');

/* entities */
require('./entities/session');
require('./entities/brand');
require('./entities/agencylocation');
require('./entities/advisor/initiative');
require('./entities/advisor/insertionorder');
require('./entities/advisor/campaign');
require('./entities/advisor/asset');
require('./entities/advisor/tag');
require('./entities/advisor/pixel');
require('./entities/advisor/account');
require('./entities/advisor/demographicset');
require('./entities/advisor/targetingset');
require('./entities/twitter/adgroup');
require('./entities/twitter/campaign');
require('./entities/twitter/fundinginstrument');
require('./entities/twitter/promotedaccount');
require('./entities/twitter/promotedtweets');
require('./entities/facebook/adset');
require('./entities/facebook/adgroup');
require('./entities/analytics');
require('./entities/pinterest/campaign');
// Audience Profiler
require('./entities/audience-profiler/page');
require('./entities/audience-profiler/custom-audience');
require('./entities/audience-profiler/audience-profile');
require('./entities/audience-profiler/twitter_user');
require('./entities/audience-profiler/twitter_audience');
require('./entities/audience-profiler/account');
require('./entities/audience-profiler/audience-profile-template');

/* child apps */
var Apps = {
    AdCreationApp: require('./modules/adcreation/adcreation-app'),
    BrowserApp: require('./modules/browser/browser-app'),
    CampaignApp: require('./modules/campaign/campaign-app'),
    CreativeApp: require('./modules/creative/creative-app'),
    HeaderApp: require('./modules/header/header-app'),
    UsageTrackingApp: require('./modules/usagetracking/usagetracking-app'),
    InitiativeApp: require('./modules/initiative/initiative-app'),
    InsertionApp: require('./modules/insertion/insertion-app'),
    AudienceProfilerApp: require('./modules/audience-profiler/audience-profiler-app'),
    LiftApp: require('./modules/lift/lift-app')
};

/* global behaviors (for Marionette) */
require('./common/behaviors');

/* channel handlers */
require('./common/modal');

/** @class */
var AdvisorApp = new Marionette.Application();

AdvisorApp.addRegions({
    mainRegion: '#main-region',
    headerRegion: '#header-region',
    footerRegion: '#footer-region',
    alertRegion: '#alert-region'
});

AppChannel.reply('mainRegion', AdvisorApp.mainRegion);
AppChannel.reply('headerRegion', AdvisorApp.headerRegion);
AppChannel.reply('footerRegion', AdvisorApp.footerRegion);
AppChannel.reply('alertRegion', AdvisorApp.alertRegion);

/** @returns {String} of the current route */
AppChannel.reply('currentRoute', function() {
    return Backbone.history.fragment || '';
});

AppChannel.on('alert', function(options) {
    options = options || {};
    var region = options.region || AdvisorApp.alertRegion;
    region.show(new AlertView({
        model: new Backbone.Model(options)
    }));
});

/**
 * @param {String} route
 * @param {Object} options
 */
AppChannel.on('navigate', function(route, options) {
    options = options || {};
    Backbone.history.navigate(route, options);
    AppChannel.trigger('router:navigate');
    AppChannel.trigger('usage:pageview');
});

/** @class */
AdvisorApp.AppRouter = Backbone.Router.extend({
    routes: {
        '': 'showHome'
    },
    'showHome': function() {
        AdvisorApp.appRouter.navigate('initiative', {replace: true, trigger: true});
    }
});

/**
 * @param {Backbone.Router} router
 * @param {String} route
 * @param {Array} options
 */
Backbone.history.on('route', function(router, route, options) {
    AppChannel.trigger('usage:pageview');
});

AdvisorApp.on('start', function(options) {
    AdvisorApp.appRouter = new AdvisorApp.AppRouter();

    AppChannel.request('session:entity:set', options);

    var appInstances = _(_.keys(Apps)).reduce(function(o, appName) {
        var App = Apps[appName];
        o[appName] = new App();
        return o;
    }, {});

    if (Backbone.history) {
        Backbone.history.start();
    }
});

AdvisorApp.on('permissionDenied', function() {
    AdvisorApp.mainRegion.show(new PermissionDenied());
});

module.exports = AdvisorApp;
