/* global dependencies */
var moment = require('moment');
var Marionette = require('backbone.marionette');
var AppChannel = require('advisor/app-channel');

/* templates */
var InsertionOrderCardLayoutTemplate = require('../../templates/insertionOrderCardLayout.hbs');

var CardItemLayoutView = Marionette.LayoutView.extend({
    className: 'insertionorder-card-sc',
    tagName: 'article',
    template: InsertionOrderCardLayoutTemplate,
    showBrand: true,
    templateHelpers: function() {
        var startDate = moment(this.model.get('start_date')).endOf('day');
        return {
            showBrand: this.getOption('showBrand'),
            status: this.model.getStatus(),
            revenue: this.model.getRevenue(),
            dateIsInFuture: moment().diff(startDate) < 0, // Dates in future will be a negative number.
            timeToStartDate: startDate.fromNow(true)
        };
    },
    regions: {
        insertionOrdersRegion: '.insertionOrders-container-sc'
    },
    ui: {
        brand: '.brand-sc',
        showOpportunitiesLink: '.view-opportunities-sc',
        opportunityToggles: '.opportunity-toggle-sc' // link and container
    },
    events: {
        'click @ui.showOpportunitiesLink': function() {
            this.ui.opportunityToggles.toggleClass('collapsed');
            AppChannel.trigger('usage:pageevent', 'Insertion Order Dashboard', 'Show Opportunities');
        }
    },
    modelEvents: {
        'init:brands': 'setBrandDisplay'
    },
    setBrandDisplay: function() {
        var brands = this.model.get('brands');
        if (brands.length) {
            this.ui.brand.removeClass('brand-not-set');
            this.ui.brand.text(brands.pluck('name').join(', '));
        }
    }
});

module.exports = CardItemLayoutView;
