/* global dependencies */
var React = require('react');
var AppChannel = require('advisor/app-channel');

var GalleryItem = React.createClass({
    getInitialState: function() {
        if (!this.props.AppChannel) throw new Error('Audience Profiler Gallery Item requires an AppChannel property.');
        return {
            selected: {}
        };
    },
    render: function() {
        var data = this.props.data;
        var imgUrlPrefix = '/platformimages/'
        return (
            <div className='col-md-4 platform-styled-selector'>
                <div className='form-group'>
                    <input type='checkbox' onChange={this.selected.bind(this, data)}  id={this.props.keypath + data.id} />
                    <label htmlFor={this.props.keypath + data.id}>
                        <i className={'fa fa-platform-' + this.props.platform}></i>
                        <span className='galleryItemName'>{data.name || data.id} {(data.approximate_count) ? '(' + data.approximate_count + ')' : ''}</span>
                    </label>
                </div>
            </div>
        );
    },
    selected: function(data) {
        var AppChannel = this.props.AppChannel;
        var selected = this.state.selected;
        selected[data.id] = !selected[data.id];
        var obj = {
            keypath: this.props.keypath,
            item: data
        };
        switch (selected[data.id]) {
            case true: return AppChannel.trigger('added-item', obj);
            case false: console.log('remove', obj); return AppChannel.trigger('removed-item', obj);
        }
    }
});

module.exports = GalleryItem;
