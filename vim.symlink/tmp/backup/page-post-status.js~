/* global dependencies */
var AppChannel = require('advisor/app-channel');

/* local dependencies */
var CommonLanguage = require('advisor/common/language');
var CreativeUploadEntities = require('advisor/entities/advisor/creativeupload').Entities;

var statusLanguage = CommonLanguage.en.facebookPagePostStatus;

var PagePostUploads = function(options) {
    this.IDs = options.IDs || [];
    this.campaign = options.campaign;
    this.entities = new CreativeUploadEntities([], {
        filters: {
            id__in: this.IDs.join(','),
            limit: this.IDs.length
        }
    });
};

PagePostUploads.prototype.checkStatus = function() {
    return this.entities.pollForStatus();
};

PagePostUploads.prototype.showStatus = function() {
    var campaignName = this.campaign.get('name');
    var postsCount = this.entities.length;
    var failedPostsCount;
    if (this.entities.isUploadSuccessful()) {
        AppChannel.trigger('alert', {
            message: statusLanguage.getSuccessMessage(campaignName, postsCount)
        });
    } else {
        failedPostsCount = this.entities.getFailedPostCount();
        AppChannel.trigger('alert', {
            message: statusLanguage.getErrorMessage(campaignName, postsCount, failedPostsCount)
        });
    }
};

var displayStatus = function(options) {
    var idsArray = options.IDs || [];
    var pagePostUploads;
    if (!idsArray.length) {
        throw new Error('Page post status requires an array of upload ids.');
    }
    if (!options.campaign) {
        throw new Error('Page post status requires a campaign.');
    }
    pagePostUploads = new PagePostUploads(options);
    pagePostUploads.checkStatus().done(function() {
       pagePostUploads.showStatus();
    });
};

module.exports = {
    showStatusMessage: displayStatus
};
