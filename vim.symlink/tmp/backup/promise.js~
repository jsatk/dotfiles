/* Dependencies */
import promise from 'advisor/common/button/components/promise'
import $ from 'jquery'

/* Module definition */
export default () => {

    let element, response, deferrer

    beforeEach(() => {

        deferrer = $.Deferred()

        element = document.createElement('div')
        response = promise(element, deferrer)

    })

    it ('should return promise', () => {

        const arrayDeferrer = promise(element, [deferrer, deferrer])

        expect(response.done).toBeDefined()
        expect(arrayDeferrer.done).toBeDefined()

    })

    it ('shows save button', () => {

        expect(element.firstChild.childNodes[1].nodeValue).toBe('Saving')

    })

    it ('shows done button', () => {

        deferrer.resolve()
        expect(element.firstChild.childNodes[1].nodeValue).toBe('Saved')

    })

    it ('shows fail button', () => {

        deferrer.reject()
        expect(element.firstChild.childNodes[1].nodeValue).toBe('Try again')

    })

}
