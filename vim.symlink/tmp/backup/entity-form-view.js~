/* global dependencies */
var Backbone = require('backbone');
var Marionette = require('backbone.marionette');
var Syphon = require('backbone.syphon');

/* module definition */
var View = Marionette.ItemView.extend({
    events: {
        'submit form': 'saveFormDataToModel'
    },
     /**
     * Noop meant to be overridden.
     */
     onSubmitSuccess: function() {
     },
     /**
     * Noop meant to be overridden.
     */
     onSubmitError: function() {
     },
     /**
     * Can override if need to santize form data before setting the model
     * @param {Object} data
     * @returns {Object}
     */
     formToModel: function(data) {
        return data;
    },
     /**
     * Can override if need to santize model data before setting the form
     * @returns {Object}
     */
     modelToForm: function() {
        return this.model.toJSON();
    },
     /**
      * @returns {Object}
      */
     getFormData: function() {//not sanitized, which can be obtained from model
        return Syphon.serialize(this) || {};
    },
     /**
      * @param {$.Event} e from the click event.
      * @returns {Boolean} false
      */
     saveFormDataToModel: function(e) {
        e.preventDefault();
        var data = this.getFormData();
        var self = this;
        this.model.set(this.formToModel(data));
        this.model.save(null, {
            success: function(model, response) {
                self.onSubmitSuccess(response);
            },
            error: function(model, response) { // could be OK status 201
                if (response.status === 201) { // created
                    self.onSubmitSuccess(response);
                } else {
                    self.onSubmitError(response);
                }
            }
        });
        return false;
    },
     onRender: function() {
        Syphon.deserialize(this, this.modelToForm());
    }
});

module.exports = View;
