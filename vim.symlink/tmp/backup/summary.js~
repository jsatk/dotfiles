AdvisorApp.module('CampaignModule.Views', function(Views) {
    Views.Summary = Marionette.LayoutView.extend({
        template: Handlebars.templates.SummaryCard,

        /** Defaults to true. Boolean to determine whether or not to show the chart as part of this card. */
        showChart: true,

        regions: {
            pacingRegion: '.pacing'
        },

        initialize: function() {
            var platform = _.string.titleize(this.getOption('platform')); // I.E. 'Facebook', 'Twitter', etc.

            this.pacingView = new (AdvisorApp.module('Common.Views')).Pacing({
                model: this.model
            });

            if (this.getOption('showChart')) this.setupChart(platform);
        },

        setupChart: function(platform) {
            this.chartView = new Views[platform + 'Chart']({
                collection: this.collection,
                level:      this.getOption('level'),
                model:      this.model,
                platform:   this.getOption('platform')
            });

            _(this.regions).extend({ chartRegion: '.chart' });
        },

        onShow: function() {
            /**
             * @param {String} selector CSS selector for region.
             * @param {String} region String of the region key on this view.
             */
            var showRegion = function(selector, region) {
                var view = region.replace('Region', 'View');

                this[region].show(this[view]);
            };

            _(this.regions).each(showRegion, this);
        },

        /** @returns {Object} of variables we want accessible in our Handlebar Template.  */
        templateHelpers:function() {
            var endDate = this.model.has('end_time') ? moment(this.model.get('end_time')) : moment(this.model.get('end_date')).endOf('day');

            return {
                dateIsInFuture:       moment().diff(endDate) < 0, // Dates in future will be a negative number.
                timeToEndDate:        endDate.fromNow(true),      // Returns a lovely string of time from now.
                endDate:              endDate.format('MM/DD/YYYY'),
                parentInitiativeName: this.getOption('initiative').get('name'),
                parentInitiativeId:   this.getOption('initiative').get('id')
            };
        }
    });
});
