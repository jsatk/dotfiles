/* global dependencies */
var Marionette = require('backbone.marionette');

/* templates */
var modalTemplate = require('../templates/modalTemplate.hbs');
module.exports = Marionette.LayoutView.extend({
    $modalWindow: null,
    template: modalTemplate,
    regions: {
        'bodyRegion': '#sc-modal-body'
    },
    ui: {
        'title': '#sc-modal-title',
        'modalWindow': '#sc-modal',
        'closeButton': '.modal-header button.close'
    },
    events: {
        'hidden.bs.modal': 'destroy',
        'click @ui.closeButton': 'onCloseModal'
    },
    childEvents: {
        'modal:close': 'close'
    },
    close: function() {
        this.$modalWindow.modal('hide');
    },
    onCloseModal: function() {
        // Hides modal triggering the `hidden.bs.modal` event.
        this.close();
        // Used sometimes by the parent view to trigger behaviors on close of modal.
        this.getOption('view').triggerMethod('modal:closed');
    },
    onRender: function() {
        var view = this.getOption('view');

        if (!view) return this;

        this.ui.title.text(view.getOption('title'));

        var classList = view.getOption('classList');

        if (classList) {
            this.ui.modalWindow.find('.modal-dialog').addClass(classList);
        }

        if (view.getOption('hideClose')) {
            this.ui.modalWindow.find('.modal-header button').addClass('hide-modal-close');
        }

        this.bodyRegion.show(view);
        this.$modalWindow = this.ui.modalWindow.modal('show');

        return this;
    },
    templateHelpers: function() {
        return this.getOption('view').modalConfigurations || {};
    }
});
