/* global dependencies */
var Marionette = require('backbone.marionette');

/* local dependencies */
var CampaignChannel = require('../campaign-channel');
var CommonLanguage = require('../../../common/language');

/* templates */
var CampaignEditSummaryTemplate = require('../templates/campaignEditSummary.hbs');

var EditSummaryView = Marionette.ItemView.extend({
    className: 'initiative-edit-summary-sc',
    template: CampaignEditSummaryTemplate,
    templateHelpers: function() {
        var platform = this.model.get('subplatform') || this.model.get('platform');
        return {
            placementOptions: CommonLanguage.en.getPlacementOptions(platform)
        };
    },
    ui: {
        'cardsSummaryContainer': '#campaign-card-summaries',
        'saveButton': '#save-campaign',
        'dontSave': '#cancel-edit'
    },
    events: {
        'click @ui.saveButton': function() {
            CampaignChannel.trigger('edit:campaign:save', this.model);
        },
        'click @ui.dontSave': function(e) {
            e.preventDefault();
            CampaignChannel.trigger('details:show', this.model.get('initiative_id'), this.model.get('id'));
        }
    },
    bindings: {
        '.click_window': 'post_click_window',
        '.click_multiplier': 'post_click_attribution_multiplier',
        '.view_window': 'post_view_window',
        '.view_multiplier': 'post_view_attribution_multiplier',
        '.view_tags': {
            observe: 'view_tags',
            onGet:   'expectNumber'
        },
        '.pixels': {
            observe: 'pixels',
            onGet:   'expectNumber'
        },
        '.genders': {
            observe: 'demographic_constraint',
            onGet:   function(value) {
                var genders = value.gender;
                return genders ? 1 : 0;
            }
        },
        '.age_ranges': {
            observe: 'demographic_constraint',
            onGet: function(values) {
                var age_range = values.age_ranges[0];
                return (age_range.min_age || age_range.max_age) ? 1 : 0;
            }
        },
        '.geo_locations': {
            observe: 'demographic_constraint',
            onGet:   function(values) {
                return this.expectNumber(values.location_sets[0].locations);
            }
        }
    },
    onShow: function() {
        /** Add stickit */
        this.stickit();
    },
    expectNumber: function(value) {
        if (value === null) {
            debugger;
        }
        return value.length || 0;
    }
});

module.exports = EditSummaryView;
