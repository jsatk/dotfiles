/* global dependencies */
var Backbone = require('backbone');
var AppChannel = require('advisor/app-channel');

/* local dependencies */
var Base = require('./base');

var TwitterPromotedTweet = Base.Model.extend({
    urlRoot: '/api/twitter/ads/v1/twitterpromotedtweet/',
    /**
     * Promoted Objects can only have two statuses: Active or Paused.
     * Set the objects Twitter status (number between 0 and 8) based on it's 'paused' value.
     */
    initialize: function() {
        var status = this.get('paused') === true ? 2 : 0;
        this.set({status: status});
    }
});
var TwitterPromotedTweets = Base.Collection.extend({
    model: TwitterPromotedTweet,
    url: TwitterPromotedTweet.prototype.urlRoot
});
var getTwitterPromotedTweetEntity = function(tweetID) {
    return Base.getBaseEntity(tweetID, TwitterPromotedTweet);
};
var getTwitterPromotedTweetEntities = function(options) {
    return Base.getBaseEntities(options, TwitterPromotedTweets);
};
var getTwitterPageablePromotedTweetEntities = function(userCanManage) {
    return Base.getPageableBaseEntities(TwitterPromotedTweet, userCanManage);
};

AppChannel.reply('twitter:promotedtweet:entity', function(tweetID) {
    return getTwitterPromotedTweetEntity(tweetID);
});
AppChannel.reply('twitter:promotedtweet:entities', function(options) {
    return getTwitterPromotedTweetEntities(options);
});
AppChannel.reply('twitter:promotedtweet:PageableEntities', function(userCanManage) {
    return getTwitterPageablePromotedTweetEntities(userCanManage);
});
