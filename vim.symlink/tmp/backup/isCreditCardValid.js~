// Mocha puts its globals on the global object so we have to tell
// StandardJS, our linter, that these functions are defined globaly so it
// doesn't yell at us.

/* global describe, it */

var expect = require('chai').expect
var isCreditCardValid = require('../lib/processCreditCards/processes/isCreditCardValid')

describe('isCreditCardValid', function () {
  it('should return false if input is not a digit, dash, or space', function () {
    expect(isCreditCardValid('asdf')).to.be.false
  })

  it('should return true if credit card is valid number', function () {
    var validCreditCards = [
      4382259995571769,
      4468194475394407,
      4893028878031205
    ]

    validCreditCards.forEach(function (number) {
      expect(isCreditCardValid(number)).to.be.true
    })
  })

  it('should return true if credit card is valid string of numbers', function () {
    var validCreditCards = [
      '4382 2599 9557 1769',
      '4468-1944-7539-4407',
      '4893028878031205'
    ]

    validCreditCards.forEach(function (string) {
      expect(isCreditCardValid(string)).to.be.true
    })
  })

  it('should return false if credit card is invalid number', function () {
    var validCreditCards = [
      438225999557769,
      446819447407,
      4893028875
    ]

    validCreditCards.forEach(function (number) {
      expect(isCreditCardValid(number)).to.be.false
    })
  })

  it('should return false if credit card is invalid string of numbers', function () {
    var validCreditCards = [
      '4382 299 9557 1769',
      '4468-1944--4407',
      '4893028989898878031205'
    ]

    validCreditCards.forEach(function (string) {
      expect(isCreditCardValid(string)).to.be.false
    })
  })
})
