import helper from 'advisor/modules/campaign/card-views/helpers/children'
import _ from 'underscore'

describe('Campaign Detail\'s Children Table Helper', () => {
    it('should be a Object', () => {
        expect(_.isObject(helper)).toBe(true)
    })

    describe('getPinterestPinpromotionsColumns()', () => {
        let columns
        beforeEach(() => {
            // There might be a more lovely way to do this
            // however I felt overriding the `getOption` method
            // here was the cleanest.  I am not interested in testing
            // the `getOption` method, just what it returns.
            helper.ObjectBrowser.getOption = (option) => {
                let options = {
                    platform: 'pinterest',
                    level: 'pinpromotions'
                }

                return options[option]
            }

            columns = helper.ObjectBrowser.getPinterestPinpromotionsColumns()
        })

        it('should return an array', () => {
            expect(
                _.isArray(columns)
            ).toBe(true)
        })

        it('should return an array with \'select-all\'', () => {
            expect(
                _(columns).findWhere({ name: 'select-all' })
            ).toBeTruthy()
        })

        it('should return an array with \'id\'', () => {
            expect(
                _(columns).findWhere({ name: 'id' })
            ).toBeTruthy()
        })

        it('should return an array with \'keywords\'', () => {
            expect(
                _(columns).findWhere({ name: 'keywords' })
            ).toBeTruthy()
        })

        it('should return an array with \'bid_in_micro_dollar\'', () => {
            expect(
                _(columns).findWhere({ name: 'bid_in_micro_dollar' })
            ).toBeTruthy()
        })

        it('should return an array with \'status\'', () => {
            expect(
                _(columns).findWhere({ name: 'status' })
            ).toBeTruthy()
        })
    })

})
